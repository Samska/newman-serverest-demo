name: Run API Tests with Postman and Newman  # Name of the workflow

on:
  push:
    branches:
      - master  # Trigger the workflow when a commit is pushed to the master branch
  schedule:
    - cron: '0 0 * * *'  # Trigger the workflow every day at midnight
  workflow_dispatch:   # Trigger the workflow manually from the Actions tab

jobs:
  setup-and-run-tests: # Stage name
    name: Setup the environment and run the tests
    runs-on: ubuntu-latest  # Run the job on the latest version of Ubuntu

    steps:
      # Check out the code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      # Install Newman and Newman HTML Reporter globally
      - name: Install Newman and Newman HTML Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      # Run Postman Collection using Newman and export an HTML report
      - name: Run Postman Collection
        run: newman run serverest-tech-sharing.postman_collection.json -e serverest-tech-sharing.postman_environment.json --reporters cli,htmlextra,json --reporter-htmlextra-export report.html --reporter-json-export report.json
        continue-on-error: true   # Continue even if there are errors in the tests

      # Extract JSON Report data to uses in Slack step
      - name: Extract JSON Report data
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            const jsonData = fs.readFileSync('report.json');
            const report = JSON.parse(jsonData);
            const totalAssertions = report.run.stats.assertions.total;
            console.log(`::set-output name=totalAssertions::${totalAssertions}`);

      # Upload the HTML report as an artifact
      - name: Publish HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: HTML Report
          path: report.html

      # Publish the HTML report to GitHub Pages
      - name: Publish HTML Report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          commit_message: Update the test report

      # Display the URL of the published HTML report to the console
      - name: Display Test Report URL
        run: |
          echo "Test report: https://${{ github.actor }}.github.io/serverest-tech-sharing/report.html"

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "'"${SLACK_CHANNEL}"'",
            "text": "Postman + Newman Test Results",
            "attachments": [
              {
                "title": "Resultado dos testes",
                "text": "https://${{ github.actor }}.github.io/serverest-tech-sharing/report.html"
              }
            ]
          }' "${SLACK_WEBHOOK_URL}"
