{
  "collection": {
    "_": {
      "postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "exporter_id": "19215117"
    },
    "item": [
      {
        "id": "b818ec6f-b64d-49ac-bc56-5cd951893a14",
        "name": "Usuários",
        "item": [
          {
            "id": "9d5a086e-2c06-4884-a25c-700c6bb16318",
            "name": "Cadastrar usuário",
            "request": {
              "url": {
                "path": [
                  "usuarios"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2af94b42-4afd-4eb7-ba4f-388c6e9eb555",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "028e93bd-c540-4341-9938-9aec5f86674f"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "1041f811-224d-4274-af70-d8d804bc6517",
                  "type": "text/javascript",
                  "exec": [
                    "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                    "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "var email = nome + \"@qa.com.br\";\r",
                    "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                    "pm.environment.set(\"email\", email);\r",
                    "pm.environment.set(\"password\", password);"
                  ],
                  "_lastExecutionId": "74ada8da-f2d1-4c5c-bfd0-2b0b28a94065"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7722ab49-2094-4e16-9530-131bc3cdc57c",
        "name": "Login",
        "item": [
          {
            "id": "724fd2d0-b6e8-41c6-8bd6-5179a9bc35cf",
            "name": "Login",
            "request": {
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "df6d1eb4-ec95-49f4-b104-f297865540f3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('authorization'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                    "});"
                  ],
                  "_lastExecutionId": "d9f89a02-061e-403d-85a1-103445c748de"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "78527d8a-b758-4466-af81-fdab7d47398e",
        "name": "Produtos",
        "item": [
          {
            "id": "53e5ef3f-8760-4be5-a272-873aef82a185",
            "name": "Listar produtos cadastrados",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "028b6164-e1c8-49cd-89f8-6a8a47fe3305",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"produtos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                    "                \"properties\": {\r",
                    "                    \"nome\": { \"type\": \"string\" },\r",
                    "                    \"preco\": { \"type\": \"integer\" },\r",
                    "                    \"descricao\": { \"type\": \"string\" },\r",
                    "                    \"quantidade\": { \"type\": \"integer\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "00fa5ba8-0c1f-4e3d-bef0-41e7a1cadc92"
                }
              }
            ]
          },
          {
            "id": "4a41b2ff-5058-4c0a-8114-a55d48929f6a",
            "name": "Cadastrar produto",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9f9f661-c50e-408e-bb96-cdbba6de3dc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d911ad9b-c620-430f-aa1e-18d93fdd430c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d830dee4-9ef4-499f-8140-c5171158c216",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "100b56f2-2400-4d00-ad0f-ef1c1da084d4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1c355b95-557e-4ae2-8f8e-2e3ab0f5596e",
        "name": "Carrinhos",
        "item": [
          {
            "id": "e172b4dd-05fe-47d7-91e6-fbb660c7ddf8",
            "name": "Cadastrar carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a623132f-1b46-4a87-b01e-201a673af0fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "b17e8527-3a55-4d59-b791-ff0355fdc7c7"
                }
              }
            ]
          },
          {
            "id": "958c1367-ec85-41d5-9bbb-22fee1ead79b",
            "name": "Buscar carrinho por ID",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [
                  {
                    "key": "_id",
                    "value": "{{idCarrinho}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "970ea83b-53df-48c0-8636-8064694bb60c",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"carrinhos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                    "                \"properties\": {                    \r",
                    "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                    "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                    "                    \"idUsuario\": { \"type\": \"string\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                    \"produtos\":{\r",
                    "                        //Valido o terceiro nível do schema\r",
                    "                        \"type\": \"array\",\r",
                    "                        \"items\": {\r",
                    "                            \"type\":\"object\",\r",
                    "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                    "                            \"properties\": {\r",
                    "                                \"idProduto\": { \"type\": \"string\" },\r",
                    "                                \"quantidade\": { \"type\": \"integer\" },\r",
                    "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                    "                            }\r",
                    "                        }\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "9d75aaaf-e504-4786-8512-b4504d36e900"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "37a2ff86-e0bb-49c1-8739-3eb9aae94be3",
            "name": "Excluir carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos",
                  "concluir-compra"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a4c8c9a4-e6b8-4651-a784-de454851a012",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                    "});"
                  ],
                  "_lastExecutionId": "b1e0ea6e-b6e6-4b9a-8703-50c689d94df6"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "name": "serverest-tech-sharing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Conteúdo para o tech sharing de testes de API com Postman.\n\nAPI utilizada:\n\n**O ServeRest é uma API REST que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-06-07T21:59:12.400Z",
      "postman_exported_using": "Postman/9.20.3"
    },
    "id": "074a4de0-8ea4-4448-8538-4cbca77455eb",
    "name": "serverest-tech-sharing",
    "values": [
      {
        "type": "any",
        "value": "Maye@qa.com.br",
        "key": "email"
      },
      {
        "type": "any",
        "value": "jRQISicEbfoJBvv",
        "key": "password"
      },
      {
        "type": "any",
        "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ik1heWVAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJqUlFJU2ljRWJmb0pCdnYiLCJpYXQiOjE2ODc3NDQ2OTksImV4cCI6MTY4Nzc0NTI5OX0.1-fIBbiyxof9eyn8oQcCW2YVpQodAKB_y_gCq1JB6HQ",
        "key": "authorization"
      },
      {
        "type": "any",
        "value": "https://serverest.dev",
        "key": "url"
      },
      {
        "type": "any",
        "value": "HK1DwYlUwICpwLli",
        "key": "idProduto"
      },
      {
        "type": "any",
        "value": "n9NcC84jR8obpzIB",
        "key": "idCarrinho"
      }
    ]
  },
  "globals": {
    "id": "1f8e6c04-e5d7-4a62-bf1d-5071f587f438",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 110.57142857142857,
      "responseMin": 73,
      "responseMax": 306,
      "responseSd": 79.84423611517819,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687744698865,
      "completed": 1687744699884
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21817ed9-a21e-46ae-a07c-ec2438bda39f",
          "httpRequestId": "c22183ad-e175-4546-b1c3-1eb0ccd4df77"
        },
        "item": {
          "id": "9d5a086e-2c06-4884-a25c-700c6bb16318",
          "name": "Cadastrar usuário",
          "request": {
            "url": {
              "path": [
                "usuarios"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af94b42-4afd-4eb7-ba4f-388c6e9eb555",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "028e93bd-c540-4341-9938-9aec5f86674f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1041f811-224d-4274-af70-d8d804bc6517",
                "type": "text/javascript",
                "exec": [
                  "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                  "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "var email = nome + \"@qa.com.br\";\r",
                  "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                  "pm.environment.set(\"email\", email);\r",
                  "pm.environment.set(\"password\", password);"
                ],
                "_lastExecutionId": "74ada8da-f2d1-4c5c-bfd0-2b0b28a94065"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "usuarios"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0e77e37d-ebc0-40eb-861e-c0a2dd52c6f1",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "118",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"Maye@qa.com.br\",\r\n  \"password\": \"jRQISicEbfoJBvv\",\r\n  \"administrador\": \"true\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "06319420-6c09-41df-8b42-2333c3bc5a8d",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "33e8e8ba-311a-41cf-b0ed-2d55c133a5ae"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "1e69d8b643789a4d88f21b686d159ab8;o=1"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              69,
              56,
              54,
              104,
              87,
              119,
              102,
              49,
              87,
              122,
              114,
              116,
              108,
              75,
              57,
              78,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 306,
          "responseSize": 82
        },
        "id": "9d5a086e-2c06-4884-a25c-700c6bb16318"
      },
      {
        "cursor": {
          "ref": "8df61d2d-5d5a-4e7c-81d9-2f1b434264ef",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8036708f-eaca-4388-8f75-d508f03ea8f7"
        },
        "item": {
          "id": "724fd2d0-b6e8-41c6-8bd6-5179a9bc35cf",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df6d1eb4-ec95-49f4-b104-f297865540f3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('authorization'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                  "});"
                ],
                "_lastExecutionId": "d9f89a02-061e-403d-85a1-103445c748de"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "login"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "76b4dca7-f225-4cf1-9f53-6acbcdb5e35c",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"Maye@qa.com.br\",\r\n  \"password\": \"jRQISicEbfoJBvv\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "8986b213-b537-4db0-b141-6ea85a549a89",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "d3cd427f-b573-41b6-b269-a0ac889c3b1f"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "9202e9ca83de77d6cc438b5a00827d71"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "280"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              110,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              66,
              101,
              97,
              114,
              101,
              114,
              32,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              108,
              98,
              87,
              70,
              112,
              98,
              67,
              73,
              54,
              73,
              107,
              49,
              104,
              101,
              87,
              86,
              65,
              99,
              87,
              69,
              117,
              89,
              50,
              57,
              116,
              76,
              109,
              74,
              121,
              73,
              105,
              119,
              105,
              99,
              71,
              70,
              122,
              99,
              51,
              100,
              118,
              99,
              109,
              81,
              105,
              79,
              105,
              74,
              113,
              85,
              108,
              70,
              74,
              85,
              50,
              108,
              106,
              82,
              87,
              74,
              109,
              98,
              48,
              112,
              67,
              100,
              110,
              89,
              105,
              76,
              67,
              74,
              112,
              89,
              88,
              81,
              105,
              79,
              106,
              69,
              50,
              79,
              68,
              99,
              51,
              78,
              68,
              81,
              50,
              79,
              84,
              107,
              115,
              73,
              109,
              86,
              52,
              99,
              67,
              73,
              54,
              77,
              84,
              89,
              52,
              78,
              122,
              99,
              48,
              78,
              84,
              73,
              53,
              79,
              88,
              48,
              46,
              49,
              45,
              102,
              73,
              66,
              98,
              105,
              121,
              120,
              111,
              102,
              57,
              101,
              121,
              110,
              56,
              111,
              81,
              99,
              67,
              87,
              50,
              89,
              86,
              112,
              81,
              111,
              100,
              65,
              75,
              66,
              95,
              121,
              95,
              103,
              67,
              113,
              49,
              74,
              66,
              54,
              72,
              81,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 77,
          "responseSize": 280
        },
        "id": "724fd2d0-b6e8-41c6-8bd6-5179a9bc35cf",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso e token de auth",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6cf8d512-13f1-46d0-8482-84b13ae3c74d",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "622b8d1f-7b60-455c-8a23-cc1eaeda4969"
        },
        "item": {
          "id": "53e5ef3f-8760-4be5-a272-873aef82a185",
          "name": "Listar produtos cadastrados",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "028b6164-e1c8-49cd-89f8-6a8a47fe3305",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"produtos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                  "                \"properties\": {\r",
                  "                    \"nome\": { \"type\": \"string\" },\r",
                  "                    \"preco\": { \"type\": \"integer\" },\r",
                  "                    \"descricao\": { \"type\": \"string\" },\r",
                  "                    \"quantidade\": { \"type\": \"integer\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "00fa5ba8-0c1f-4e3d-bef0-41e7a1cadc92"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8bc4b8eb-0f47-450a-9c82-e30cc7073641",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bad2e0e6-4c47-48e6-abf2-112677b05ed0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "0ed7e964-8221-4cd2-b08d-6aa89b8e3af2"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "b140229450b20f01ea783c22f42b3ad4"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "435"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              116,
              101,
              99,
              104,
              32,
              77,
              88,
              32,
              86,
              101,
              114,
              116,
              105,
              99,
              97,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              55,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              66,
              101,
              101,
              74,
              104,
              53,
              108,
              122,
              51,
              107,
              54,
              107,
              83,
              73,
              122,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              32,
              54,
              48,
              32,
              112,
              111,
              108,
              101,
              103,
              97,
              100,
              97,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              50,
              52,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              84,
              86,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              57,
              57,
              55,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              75,
              54,
              108,
              101,
              72,
              100,
              102,
              116,
              67,
              101,
              79,
              74,
              106,
              56,
              66,
              74,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 435
        },
        "id": "53e5ef3f-8760-4be5-a272-873aef82a185",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "051372b6-1e04-4faa-af73-01a105349c55",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5bab9c1-1ec5-4368-8990-94b3b209380a"
        },
        "item": {
          "id": "4a41b2ff-5058-4c0a-8114-a55d48929f6a",
          "name": "Cadastrar produto",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e9f9f661-c50e-408e-bb96-cdbba6de3dc4",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "d911ad9b-c620-430f-aa1e-18d93fdd430c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d830dee4-9ef4-499f-8140-c5171158c216",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "100b56f2-2400-4d00-ad0f-ef1c1da084d4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ik1heWVAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJqUlFJU2ljRWJmb0pCdnYiLCJpYXQiOjE2ODc3NDQ2OTksImV4cCI6MTY4Nzc0NTI5OX0.1-fIBbiyxof9eyn8oQcCW2YVpQodAKB_y_gCq1JB6HQ"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f04afbe2-cda8-49a3-bd6f-d41a36099c43",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "121",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"Practical Frozen Table\",\r\n  \"preco\": 254,\r\n  \"descricao\": \"Unbranded Wooden Shirt\",\r\n  \"quantidade\": 203\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6d7a7ff5-f0c0-4882-8995-06133d894a75",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "fc7a552a-34bb-4389-8d88-74f9f623dc5d"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "781470539a593cb4179bc61680db51ba"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              72,
              75,
              49,
              68,
              119,
              89,
              108,
              85,
              119,
              73,
              67,
              112,
              119,
              76,
              108,
              105,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 79,
          "responseSize": 82
        },
        "id": "4a41b2ff-5058-4c0a-8114-a55d48929f6a",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1e25f329-d31d-421c-9125-3f35c5035e5e",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "651e64ad-99b0-455f-a9af-138d293e7ea0"
        },
        "item": {
          "id": "e172b4dd-05fe-47d7-91e6-fbb660c7ddf8",
          "name": "Cadastrar carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a623132f-1b46-4a87-b01e-201a673af0fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "b17e8527-3a55-4d59-b791-ff0355fdc7c7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ik1heWVAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJqUlFJU2ljRWJmb0pCdnYiLCJpYXQiOjE2ODc3NDQ2OTksImV4cCI6MTY4Nzc0NTI5OX0.1-fIBbiyxof9eyn8oQcCW2YVpQodAKB_y_gCq1JB6HQ"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "40693424-d766-4190-a611-2d45d4aa6dad",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "103",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"HK1DwYlUwICpwLli\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "885aa7d3-9fb0-4b77-8974-6c1573a63129",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "f4ff14a6-5cbb-4963-bb7c-3546957f697e"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "0608bd7803f1c4a18124fdd46170278b"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              110,
              57,
              78,
              99,
              67,
              56,
              52,
              106,
              82,
              56,
              111,
              98,
              112,
              122,
              73,
              66,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 82
        },
        "id": "e172b4dd-05fe-47d7-91e6-fbb660c7ddf8",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d311b2cb-8d13-4655-a563-dc9042775447",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "90adf4f0-8b4a-48ac-8019-e4dd44db3212"
        },
        "item": {
          "id": "958c1367-ec85-41d5-9bbb-22fee1ead79b",
          "name": "Buscar carrinho por ID",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [
                {
                  "key": "_id",
                  "value": "{{idCarrinho}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "970ea83b-53df-48c0-8636-8064694bb60c",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"carrinhos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                  "                \"properties\": {                    \r",
                  "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                  "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                  "                    \"idUsuario\": { \"type\": \"string\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                    \"produtos\":{\r",
                  "                        //Valido o terceiro nível do schema\r",
                  "                        \"type\": \"array\",\r",
                  "                        \"items\": {\r",
                  "                            \"type\":\"object\",\r",
                  "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                  "                            \"properties\": {\r",
                  "                                \"idProduto\": { \"type\": \"string\" },\r",
                  "                                \"quantidade\": { \"type\": \"integer\" },\r",
                  "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                  "                            }\r",
                  "                        }\r",
                  "                    }\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "9d75aaaf-e504-4786-8512-b4504d36e900"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [
              {
                "key": "_id",
                "value": "n9NcC84jR8obpzIB"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ik1heWVAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJqUlFJU2ljRWJmb0pCdnYiLCJpYXQiOjE2ODc3NDQ2OTksImV4cCI6MTY4Nzc0NTI5OX0.1-fIBbiyxof9eyn8oQcCW2YVpQodAKB_y_gCq1JB6HQ"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "aa3fcdf3-1fd2-433c-8cd4-85cc5a321781",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3ee94917-4e21-46db-bd68-70b283513e90",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "4831db8b-06b8-4fd2-a925-f8d02463ad7b"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "cba55cd292ef65878ddedd9c03ddc79a"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "425"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              114,
              114,
              105,
              110,
              104,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              80,
              114,
              111,
              100,
              117,
              116,
              111,
              34,
              58,
              32,
              34,
              72,
              75,
              49,
              68,
              119,
              89,
              108,
              85,
              119,
              73,
              67,
              112,
              119,
              76,
              108,
              105,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              85,
              110,
              105,
              116,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              50,
              53,
              52,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              50,
              53,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              85,
              115,
              117,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              34,
              69,
              56,
              54,
              104,
              87,
              119,
              102,
              49,
              87,
              122,
              114,
              116,
              108,
              75,
              57,
              78,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              110,
              57,
              78,
              99,
              67,
              56,
              52,
              106,
              82,
              56,
              111,
              98,
              112,
              122,
              73,
              66,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 73,
          "responseSize": 425
        },
        "id": "958c1367-ec85-41d5-9bbb-22fee1ead79b",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8607fb63-6b45-4803-8998-25676a44e225",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a9d21fa6-2130-44ae-be6d-c84113227bca"
        },
        "item": {
          "id": "37a2ff86-e0bb-49c1-8739-3eb9aae94be3",
          "name": "Excluir carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos",
                "concluir-compra"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a4c8c9a4-e6b8-4651-a784-de454851a012",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                  "});"
                ],
                "_lastExecutionId": "b1e0ea6e-b6e6-4b9a-8703-50c689d94df6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos",
              "concluir-compra"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ik1heWVAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJqUlFJU2ljRWJmb0pCdnYiLCJpYXQiOjE2ODc3NDQ2OTksImV4cCI6MTY4Nzc0NTI5OX0.1-fIBbiyxof9eyn8oQcCW2YVpQodAKB_y_gCq1JB6HQ"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2e6c71e4-e994-4047-a64f-cfad2507844b",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b19bf8a9-e216-4ec9-ac48-b8716b6c8b24",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "2940ded8-ba3f-4676-8a64-970965e0a2d5"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "8362ecc79dfb0c9d9349c09c80dfdfc7"
            },
            {
              "key": "Date",
              "value": "Mon, 26 Jun 2023 01:58:19 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "51"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              82,
              101,
              103,
              105,
              115,
              116,
              114,
              111,
              32,
              101,
              120,
              99,
              108,
              117,
              195,
              173,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 75,
          "responseSize": 51
        },
        "id": "37a2ff86-e0bb-49c1-8739-3eb9aae94be3",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1437
    },
    "failures": [],
    "error": null
  }
}