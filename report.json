{
  "collection": {
    "_": {
      "postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "exporter_id": "19215117"
    },
    "item": [
      {
        "id": "cda06aeb-faa2-4d74-9598-431dc037fe54",
        "name": "Usuários",
        "item": [
          {
            "id": "99feb626-8d89-4341-aa88-04256ca02a93",
            "name": "Cadastrar usuário",
            "request": {
              "url": {
                "path": [
                  "usuarios"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "10c2ac76-d884-4b26-8437-c86ef4589bfc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10d7d7a4-3a5d-4da1-805f-d33e185ce947"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "654c95fa-9d44-402e-a071-ab588e540d2a",
                  "type": "text/javascript",
                  "exec": [
                    "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                    "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "var email = nome + \"@qa.com.br\";\r",
                    "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                    "pm.environment.set(\"email\", email);\r",
                    "pm.environment.set(\"password\", password);"
                  ],
                  "_lastExecutionId": "b328ecfb-6d31-4d80-91b4-addb72646c95"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "158d9682-f991-47cc-a521-ab1574b568e1",
        "name": "Login",
        "item": [
          {
            "id": "2737c6d9-1d75-4d11-a134-456383522262",
            "name": "Login",
            "request": {
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b9256d27-f459-4dcc-8eba-c53b0a4fa5f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('authorization'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                    "});"
                  ],
                  "_lastExecutionId": "e8e96add-e6f3-4119-ad25-3103fad11727"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "79c4cdc6-077f-4a83-ae9f-ddf8d4addaf7",
        "name": "Produtos",
        "item": [
          {
            "id": "ca689f75-a196-4683-925e-62f2f6299ec4",
            "name": "Listar produtos cadastrados",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cdbcef28-387e-4281-b8f0-638684cf2cfd",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"produtos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                    "                \"properties\": {\r",
                    "                    \"nome\": { \"type\": \"string\" },\r",
                    "                    \"preco\": { \"type\": \"integer\" },\r",
                    "                    \"descricao\": { \"type\": \"string\" },\r",
                    "                    \"quantidade\": { \"type\": \"integer\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "9e0de51c-4a6c-46dd-ae7e-94dbdbfaa359"
                }
              }
            ]
          },
          {
            "id": "41cdf2b9-1774-474e-b9f6-9fac96ffa69c",
            "name": "Cadastrar produto",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c576de95-3d2e-4a67-bbeb-6bd9469b694b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "703a0394-234a-4d2a-96e0-8e5e565b5421"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45980775-46ab-44ae-80bf-a98a853ef62b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "99c794ab-f4d3-437e-9cdf-7ebef9189e6f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ef3e216c-4bab-45c0-bd38-f7d96e3b2315",
        "name": "Carrinhos",
        "item": [
          {
            "id": "04297b0e-af2c-4468-8759-09a63423f504",
            "name": "Cadastrar carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "531ebf48-c1c1-4e08-8797-f47a58bc7d95",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "9fa9a9b9-131f-42c2-b82e-7454c38b3178"
                }
              }
            ]
          },
          {
            "id": "efb3be64-9443-4d5a-a902-c52928c7642f",
            "name": "Buscar carrinho por ID",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [
                  {
                    "key": "_id",
                    "value": "{{idCarrinho}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f8219d17-d6c7-4ea2-9954-ea7eaa73345d",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"carrinhos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                    "                \"properties\": {                    \r",
                    "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                    "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                    "                    \"idUsuario\": { \"type\": \"string\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                    \"produtos\":{\r",
                    "                        //Valido o terceiro nível do schema\r",
                    "                        \"type\": \"array\",\r",
                    "                        \"items\": {\r",
                    "                            \"type\":\"object\",\r",
                    "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                    "                            \"properties\": {\r",
                    "                                \"idProduto\": { \"type\": \"string\" },\r",
                    "                                \"quantidade\": { \"type\": \"integer\" },\r",
                    "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                    "                            }\r",
                    "                        }\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "fae604ac-3bc7-4e24-a796-9b584122e15f"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "9e97103b-630b-45c3-a6ec-362e02dc48e4",
            "name": "Excluir carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos",
                  "concluir-compra"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d52d035d-94ca-4399-8696-528b8da9360c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                    "});"
                  ],
                  "_lastExecutionId": "c439f659-1c53-42e2-8384-4984b458b719"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "name": "serverest-tech-sharing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Conteúdo para o tech sharing de testes de API com Postman.\n\nAPI utilizada:\n\n**O ServeRest é uma API REST que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-06-07T21:59:12.400Z",
      "postman_exported_using": "Postman/9.20.3"
    },
    "id": "074a4de0-8ea4-4448-8538-4cbca77455eb",
    "name": "serverest-tech-sharing",
    "values": [
      {
        "type": "any",
        "value": "Derrick@qa.com.br",
        "key": "email"
      },
      {
        "type": "any",
        "value": "CdPG1g1G12LRcaa",
        "key": "password"
      },
      {
        "type": "any",
        "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkRlcnJpY2tAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJDZFBHMWcxRzEyTFJjYWEiLCJpYXQiOjE3MTAxMTY1NDksImV4cCI6MTcxMDExNzE0OX0.rS6ND7S7J0TCXYJB0EHbv5TIVfiYaeliV-DHTbHb-TY",
        "key": "authorization"
      },
      {
        "type": "any",
        "value": "https://serverest.dev",
        "key": "url"
      },
      {
        "type": "any",
        "value": "462dSQrSuxdBhhDc",
        "key": "idProduto"
      },
      {
        "type": "any",
        "value": "2ZXzKdsi2L0qRvWP",
        "key": "idCarrinho"
      }
    ]
  },
  "globals": {
    "id": "e8f3180a-8353-4ba4-a289-c064abf2bc05",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1324.142857142857,
      "responseMin": 32,
      "responseMax": 9033,
      "responseSd": 3147.1311847264246,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710116540761,
      "completed": 1710116550221
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d36163a-ab8a-4b33-805b-4bf7ac24ca24",
          "httpRequestId": "b540571d-03bf-4a2a-a463-48fa449fc120"
        },
        "item": {
          "id": "99feb626-8d89-4341-aa88-04256ca02a93",
          "name": "Cadastrar usuário",
          "request": {
            "url": {
              "path": [
                "usuarios"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "10c2ac76-d884-4b26-8437-c86ef4589bfc",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "10d7d7a4-3a5d-4da1-805f-d33e185ce947"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "654c95fa-9d44-402e-a071-ab588e540d2a",
                "type": "text/javascript",
                "exec": [
                  "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                  "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "var email = nome + \"@qa.com.br\";\r",
                  "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                  "pm.environment.set(\"email\", email);\r",
                  "pm.environment.set(\"password\", password);"
                ],
                "_lastExecutionId": "b328ecfb-6d31-4d80-91b4-addb72646c95"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "usuarios"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "42c583b4-a4dd-4472-9431-be6b1573a79c",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "121",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"Derrick@qa.com.br\",\r\n  \"password\": \"CdPG1g1G12LRcaa\",\r\n  \"administrador\": \"true\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "5cbad256-b5e4-4985-9efa-e0ed06591591",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "f5ba4eec2a89e58e22e84768121f60b7;o=1"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:29 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              76,
              118,
              76,
              75,
              56,
              97,
              101,
              98,
              54,
              57,
              119,
              78,
              109,
              112,
              48,
              117,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9033,
          "responseSize": 82
        },
        "id": "99feb626-8d89-4341-aa88-04256ca02a93"
      },
      {
        "cursor": {
          "ref": "a77808af-ebff-4d57-8730-06eb9ddb6001",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "12a2ff5e-5b7d-4177-9c21-b3c1ccc6a86a"
        },
        "item": {
          "id": "2737c6d9-1d75-4d11-a134-456383522262",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b9256d27-f459-4dcc-8eba-c53b0a4fa5f5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('authorization'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                  "});"
                ],
                "_lastExecutionId": "e8e96add-e6f3-4119-ad25-3103fad11727"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "login"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ec11ad63-55f1-4970-9830-459a386ae0a9",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "70",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"Derrick@qa.com.br\",\r\n  \"password\": \"CdPG1g1G12LRcaa\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3c1e3904-c203-44dd-9c08-f245539cc6ea",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "f28a30a54404c11455906ac75cd70b48"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:29 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "284"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              110,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              66,
              101,
              97,
              114,
              101,
              114,
              32,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              108,
              98,
              87,
              70,
              112,
              98,
              67,
              73,
              54,
              73,
              107,
              82,
              108,
              99,
              110,
              74,
              112,
              89,
              50,
              116,
              65,
              99,
              87,
              69,
              117,
              89,
              50,
              57,
              116,
              76,
              109,
              74,
              121,
              73,
              105,
              119,
              105,
              99,
              71,
              70,
              122,
              99,
              51,
              100,
              118,
              99,
              109,
              81,
              105,
              79,
              105,
              74,
              68,
              90,
              70,
              66,
              72,
              77,
              87,
              99,
              120,
              82,
              122,
              69,
              121,
              84,
              70,
              74,
              106,
              89,
              87,
              69,
              105,
              76,
              67,
              74,
              112,
              89,
              88,
              81,
              105,
              79,
              106,
              69,
              51,
              77,
              84,
              65,
              120,
              77,
              84,
              89,
              49,
              78,
              68,
              107,
              115,
              73,
              109,
              86,
              52,
              99,
              67,
              73,
              54,
              77,
              84,
              99,
              120,
              77,
              68,
              69,
              120,
              78,
              122,
              69,
              48,
              79,
              88,
              48,
              46,
              114,
              83,
              54,
              78,
              68,
              55,
              83,
              55,
              74,
              48,
              84,
              67,
              88,
              89,
              74,
              66,
              48,
              69,
              72,
              98,
              118,
              53,
              84,
              73,
              86,
              102,
              105,
              89,
              97,
              101,
              108,
              105,
              86,
              45,
              68,
              72,
              84,
              98,
              72,
              98,
              45,
              84,
              89,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 44,
          "responseSize": 284
        },
        "id": "2737c6d9-1d75-4d11-a134-456383522262",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso e token de auth",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fc5481c7-4e97-4b96-bd6b-2a541985d61f",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a7b2ac95-2e93-4247-94e0-fd47a3b5d581"
        },
        "item": {
          "id": "ca689f75-a196-4683-925e-62f2f6299ec4",
          "name": "Listar produtos cadastrados",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cdbcef28-387e-4281-b8f0-638684cf2cfd",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"produtos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                  "                \"properties\": {\r",
                  "                    \"nome\": { \"type\": \"string\" },\r",
                  "                    \"preco\": { \"type\": \"integer\" },\r",
                  "                    \"descricao\": { \"type\": \"string\" },\r",
                  "                    \"quantidade\": { \"type\": \"integer\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "9e0de51c-4a6c-46dd-ae7e-94dbdbfaa359"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "42c032ee-2ce4-4f0d-a6ce-db71c204fcec",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7b1db8d5-d173-4ef0-bae6-a98935bef662",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "1ed207ad710998df656bcaa02d88d7e4"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:29 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "435"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              116,
              101,
              99,
              104,
              32,
              77,
              88,
              32,
              86,
              101,
              114,
              116,
              105,
              99,
              97,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              55,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              66,
              101,
              101,
              74,
              104,
              53,
              108,
              122,
              51,
              107,
              54,
              107,
              83,
              73,
              122,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              32,
              54,
              48,
              32,
              112,
              111,
              108,
              101,
              103,
              97,
              100,
              97,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              50,
              52,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              84,
              86,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              57,
              57,
              55,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              75,
              54,
              108,
              101,
              72,
              100,
              102,
              116,
              67,
              101,
              79,
              74,
              106,
              56,
              66,
              74,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 38,
          "responseSize": 435
        },
        "id": "ca689f75-a196-4683-925e-62f2f6299ec4",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ee68a1c-2bfb-4cbe-9c00-22426364b076",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f1a571e8-1152-4ba2-be20-b9fac5098903"
        },
        "item": {
          "id": "41cdf2b9-1774-474e-b9f6-9fac96ffa69c",
          "name": "Cadastrar produto",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c576de95-3d2e-4a67-bbeb-6bd9469b694b",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "703a0394-234a-4d2a-96e0-8e5e565b5421"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "45980775-46ab-44ae-80bf-a98a853ef62b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "99c794ab-f4d3-437e-9cdf-7ebef9189e6f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkRlcnJpY2tAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJDZFBHMWcxRzEyTFJjYWEiLCJpYXQiOjE3MTAxMTY1NDksImV4cCI6MTcxMDExNzE0OX0.rS6ND7S7J0TCXYJB0EHbv5TIVfiYaeliV-DHTbHb-TY"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "622fadcc-96e7-4442-a0a5-85cf7426b392",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"Incredible Rubber Computer\",\r\n  \"preco\": 761,\r\n  \"descricao\": \"Handmade Rubber Gloves\",\r\n  \"quantidade\": 15\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "121fe649-ab2f-4d2e-a8c8-3f79ee94e339",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "529edeea2815df687c96c9e56833ab59"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:30 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              52,
              54,
              50,
              100,
              83,
              81,
              114,
              83,
              117,
              120,
              100,
              66,
              104,
              104,
              68,
              99,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 43,
          "responseSize": 82
        },
        "id": "41cdf2b9-1774-474e-b9f6-9fac96ffa69c",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "65ad2a72-4144-4f7f-8f88-83a0c26ef0e9",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d08b2ea7-2488-4db4-bad3-ac2c2886e0b2"
        },
        "item": {
          "id": "04297b0e-af2c-4468-8759-09a63423f504",
          "name": "Cadastrar carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "531ebf48-c1c1-4e08-8797-f47a58bc7d95",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "9fa9a9b9-131f-42c2-b82e-7454c38b3178"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkRlcnJpY2tAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJDZFBHMWcxRzEyTFJjYWEiLCJpYXQiOjE3MTAxMTY1NDksImV4cCI6MTcxMDExNzE0OX0.rS6ND7S7J0TCXYJB0EHbv5TIVfiYaeliV-DHTbHb-TY"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "db4405ef-ab09-411d-a755-1dff3000fa78",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "103",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"462dSQrSuxdBhhDc\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1a4e49a2-e1a8-4138-947d-fb2dea6726ea",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "c7ded4cbceaff897aa6e9cbc584ead64"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:30 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              50,
              90,
              88,
              122,
              75,
              100,
              115,
              105,
              50,
              76,
              48,
              113,
              82,
              118,
              87,
              80,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 45,
          "responseSize": 82
        },
        "id": "04297b0e-af2c-4468-8759-09a63423f504",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "35c60e5a-d18f-47d4-a34d-513bcf65aced",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "599be27c-2067-4701-bc15-d8584c82e8ef"
        },
        "item": {
          "id": "efb3be64-9443-4d5a-a902-c52928c7642f",
          "name": "Buscar carrinho por ID",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [
                {
                  "key": "_id",
                  "value": "{{idCarrinho}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8219d17-d6c7-4ea2-9954-ea7eaa73345d",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"carrinhos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                  "                \"properties\": {                    \r",
                  "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                  "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                  "                    \"idUsuario\": { \"type\": \"string\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                    \"produtos\":{\r",
                  "                        //Valido o terceiro nível do schema\r",
                  "                        \"type\": \"array\",\r",
                  "                        \"items\": {\r",
                  "                            \"type\":\"object\",\r",
                  "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                  "                            \"properties\": {\r",
                  "                                \"idProduto\": { \"type\": \"string\" },\r",
                  "                                \"quantidade\": { \"type\": \"integer\" },\r",
                  "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                  "                            }\r",
                  "                        }\r",
                  "                    }\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "fae604ac-3bc7-4e24-a796-9b584122e15f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [
              {
                "key": "_id",
                "value": "2ZXzKdsi2L0qRvWP"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkRlcnJpY2tAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJDZFBHMWcxRzEyTFJjYWEiLCJpYXQiOjE3MTAxMTY1NDksImV4cCI6MTcxMDExNzE0OX0.rS6ND7S7J0TCXYJB0EHbv5TIVfiYaeliV-DHTbHb-TY"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9fde1094-e4a5-4a8f-a533-a2e6c3cb1852",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "5ab5fb98-dd92-484c-b283-88aca079cd35",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "6c3d00a0c97c47c1242b5e5a780d12ff"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:30 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "425"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              114,
              114,
              105,
              110,
              104,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              80,
              114,
              111,
              100,
              117,
              116,
              111,
              34,
              58,
              32,
              34,
              52,
              54,
              50,
              100,
              83,
              81,
              114,
              83,
              117,
              120,
              100,
              66,
              104,
              104,
              68,
              99,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              85,
              110,
              105,
              116,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              55,
              54,
              49,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              55,
              54,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              85,
              115,
              117,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              34,
              76,
              118,
              76,
              75,
              56,
              97,
              101,
              98,
              54,
              57,
              119,
              78,
              109,
              112,
              48,
              117,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              50,
              90,
              88,
              122,
              75,
              100,
              115,
              105,
              50,
              76,
              48,
              113,
              82,
              118,
              87,
              80,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 34,
          "responseSize": 425
        },
        "id": "efb3be64-9443-4d5a-a902-c52928c7642f",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "162a7ca2-b785-42ac-a1f4-f0b34ff04140",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6d9eefff-e275-44af-a505-d3e8c5122a41"
        },
        "item": {
          "id": "9e97103b-630b-45c3-a6ec-362e02dc48e4",
          "name": "Excluir carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos",
                "concluir-compra"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d52d035d-94ca-4399-8696-528b8da9360c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                  "});"
                ],
                "_lastExecutionId": "c439f659-1c53-42e2-8384-4984b458b719"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos",
              "concluir-compra"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkRlcnJpY2tAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJDZFBHMWcxRzEyTFJjYWEiLCJpYXQiOjE3MTAxMTY1NDksImV4cCI6MTcxMDExNzE0OX0.rS6ND7S7J0TCXYJB0EHbv5TIVfiYaeliV-DHTbHb-TY"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.36.3",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4a3ec849-ea68-43f5-afda-c99754ac8769",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c0dc2834-c265-412f-ad28-432157c5e186",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "cbc19766ff448a802d75766fd6cda549"
            },
            {
              "key": "Date",
              "value": "Mon, 11 Mar 2024 00:22:30 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "51"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              82,
              101,
              103,
              105,
              115,
              116,
              114,
              111,
              32,
              101,
              120,
              99,
              108,
              117,
              195,
              173,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 32,
          "responseSize": 51
        },
        "id": "9e97103b-630b-45c3-a6ec-362e02dc48e4",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1441
    },
    "failures": [],
    "error": null
  }
}