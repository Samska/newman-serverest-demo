{
  "collection": {
    "_": {
      "postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "exporter_id": "19215117"
    },
    "item": [
      {
        "id": "b9096ffe-5237-4a71-b091-af27f499b71b",
        "name": "Usuários",
        "item": [
          {
            "id": "4f1ae6a8-c455-4538-9713-32d4ece7e03d",
            "name": "Cadastrar usuário",
            "request": {
              "url": {
                "path": [
                  "usuarios"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4c01bb32-638b-44f8-ac36-af48f49fbd9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a58b7b1-7370-43a4-9a7f-25975ee1fd2f"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "11657d8b-46cf-4b5f-bd7e-ca58e0115f0f",
                  "type": "text/javascript",
                  "exec": [
                    "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                    "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "var email = nome + \"@qa.com.br\";\r",
                    "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                    "pm.environment.set(\"email\", email);\r",
                    "pm.environment.set(\"password\", password);"
                  ],
                  "_lastExecutionId": "76378b00-96e6-47ae-9cfc-b05b715e43e8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "86da541d-b473-4539-b460-cf33601ec45e",
        "name": "Login",
        "item": [
          {
            "id": "825e0422-ffef-4dd9-8d8e-8d4275feec7b",
            "name": "Login",
            "request": {
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "513149c1-4d79-4c20-9a12-059851cf8782",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('authorization'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                    "});"
                  ],
                  "_lastExecutionId": "3c9bc01c-3573-4e04-ba42-db645a7a85fe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "00212a8f-4129-4d9a-8a42-35fa8d111bf1",
        "name": "Produtos",
        "item": [
          {
            "id": "3502bc56-7157-4581-90a5-6704a37d36da",
            "name": "Listar produtos cadastrados",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0d8586ac-2ed6-4a73-b16c-af3d455e3ce7",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"produtos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                    "                \"properties\": {\r",
                    "                    \"nome\": { \"type\": \"string\" },\r",
                    "                    \"preco\": { \"type\": \"integer\" },\r",
                    "                    \"descricao\": { \"type\": \"string\" },\r",
                    "                    \"quantidade\": { \"type\": \"integer\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "776e4e1f-8e92-4786-926f-3c9b4fcb8c5f"
                }
              }
            ]
          },
          {
            "id": "0752d071-a67b-4b25-8fc9-59d2a4376b3a",
            "name": "Cadastrar produto",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f39b7211-1b87-4d43-94c6-d045e5a0a028",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69c1cae5-ce4f-4532-baf5-f2ce8cf6811f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32869862-1afa-4db1-9221-d519e0cf3868",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "23111706-9327-4fd4-92cb-5878f73ad237"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e103203a-f99e-41c4-a534-052f86d5279d",
        "name": "Carrinhos",
        "item": [
          {
            "id": "1f680cd3-0012-443f-aa77-35a2cc65e6c3",
            "name": "Cadastrar carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6cd1ee1c-4bc6-48d1-b411-9ef6b96634f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "d107aa80-69e0-4bcf-b2ca-b78d84b5ba4d"
                }
              }
            ]
          },
          {
            "id": "f7a7b085-f5ac-4ad5-ab51-736d7171c313",
            "name": "Buscar carrinho por ID",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [
                  {
                    "key": "_id",
                    "value": "{{idCarrinho}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b5d74ca0-3a00-48bb-aeb4-70bd464f6a96",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"carrinhos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                    "                \"properties\": {                    \r",
                    "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                    "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                    "                    \"idUsuario\": { \"type\": \"string\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                    \"produtos\":{\r",
                    "                        //Valido o terceiro nível do schema\r",
                    "                        \"type\": \"array\",\r",
                    "                        \"items\": {\r",
                    "                            \"type\":\"object\",\r",
                    "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                    "                            \"properties\": {\r",
                    "                                \"idProduto\": { \"type\": \"string\" },\r",
                    "                                \"quantidade\": { \"type\": \"integer\" },\r",
                    "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                    "                            }\r",
                    "                        }\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "79e3a08b-76da-4486-89d1-55b63518488c"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "3ab19518-73e2-44b2-8c2c-3ea619d8d8c7",
            "name": "Excluir carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos",
                  "concluir-compra"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e358ae78-8bc3-4c82-8728-3c43b0332693",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                    "});"
                  ],
                  "_lastExecutionId": "bba49ba6-7243-4500-9d69-b146e66d4b78"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "name": "serverest-tech-sharing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Conteúdo para o tech sharing de testes de API com Postman.\n\nAPI utilizada:\n\n**O ServeRest é uma API REST que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-06-07T21:59:12.400Z",
      "postman_exported_using": "Postman/9.20.3"
    },
    "id": "074a4de0-8ea4-4448-8538-4cbca77455eb",
    "name": "serverest-tech-sharing",
    "values": [
      {
        "type": "any",
        "value": "Hadley@qa.com.br",
        "key": "email"
      },
      {
        "type": "any",
        "value": "cTFFNtgOYHKCveO",
        "key": "password"
      },
      {
        "type": "any",
        "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkhhZGxleUBxYS5jb20uYnIiLCJwYXNzd29yZCI6ImNURkZOdGdPWUhLQ3ZlTyIsImlhdCI6MTY4NTYyOTQyOSwiZXhwIjoxNjg1NjMwMDI5fQ.Zh0Il4XAn-6dG0WZMKhhD_O1x2prvQVNSvEWZVXc1vc",
        "key": "authorization"
      },
      {
        "type": "any",
        "value": "https://serverest.dev",
        "key": "url"
      },
      {
        "type": "any",
        "value": "jCVBlxKKf3xLB7mp",
        "key": "idProduto"
      },
      {
        "type": "any",
        "value": "Pyy3jFspVIsRA4ww",
        "key": "idCarrinho"
      }
    ]
  },
  "globals": {
    "id": "fccc9d7b-50d7-46d4-9341-93b39cac5e9f",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.85714285714286,
      "responseMin": 44,
      "responseMax": 209,
      "responseSd": 56.45080936134591,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685629429563,
      "completed": 1685629430280
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2bbe895a-1cae-44fe-aa97-74dea7041426",
          "httpRequestId": "5d414f26-0772-44fe-8dd6-c7aa5177a8bd"
        },
        "item": {
          "id": "4f1ae6a8-c455-4538-9713-32d4ece7e03d",
          "name": "Cadastrar usuário",
          "request": {
            "url": {
              "path": [
                "usuarios"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c01bb32-638b-44f8-ac36-af48f49fbd9c",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "4a58b7b1-7370-43a4-9a7f-25975ee1fd2f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "11657d8b-46cf-4b5f-bd7e-ca58e0115f0f",
                "type": "text/javascript",
                "exec": [
                  "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                  "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "var email = nome + \"@qa.com.br\";\r",
                  "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                  "pm.environment.set(\"email\", email);\r",
                  "pm.environment.set(\"password\", password);"
                ],
                "_lastExecutionId": "76378b00-96e6-47ae-9cfc-b05b715e43e8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "usuarios"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "103a18b1-8f07-4cc5-a174-12d8eeb3c6f1",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "120",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"Hadley@qa.com.br\",\r\n  \"password\": \"cTFFNtgOYHKCveO\",\r\n  \"administrador\": \"true\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3089bb93-d1e0-446d-9211-55f754f5aadf",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "c709a82c-629b-42e4-baad-ba85636dfbf7"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "00c5f74673378d2a254bd3039e1815ec;o=1"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:49 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              103,
              80,
              52,
              71,
              78,
              49,
              72,
              48,
              122,
              116,
              80,
              80,
              86,
              109,
              52,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 209,
          "responseSize": 82
        },
        "id": "4f1ae6a8-c455-4538-9713-32d4ece7e03d"
      },
      {
        "cursor": {
          "ref": "a7fa6066-bf31-4c50-ab38-429a726667a9",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4ae85e87-ceae-45d8-8456-9292d9502afd"
        },
        "item": {
          "id": "825e0422-ffef-4dd9-8d8e-8d4275feec7b",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "513149c1-4d79-4c20-9a12-059851cf8782",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('authorization'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                  "});"
                ],
                "_lastExecutionId": "3c9bc01c-3573-4e04-ba42-db645a7a85fe"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "login"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5e096e3e-5a21-4bb7-ab42-c71fb707f91c",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "69",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"Hadley@qa.com.br\",\r\n  \"password\": \"cTFFNtgOYHKCveO\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ea362e2a-3c9e-49a2-b61c-ad7bb2232ba3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "dd89355a-5677-4c81-9857-e00f11cba1b0"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "168fc896d52ce1abb7a6c4e24418aa36"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:49 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "283"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              110,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              66,
              101,
              97,
              114,
              101,
              114,
              32,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              108,
              98,
              87,
              70,
              112,
              98,
              67,
              73,
              54,
              73,
              107,
              104,
              104,
              90,
              71,
              120,
              108,
              101,
              85,
              66,
              120,
              89,
              83,
              53,
              106,
              98,
              50,
              48,
              117,
              89,
              110,
              73,
              105,
              76,
              67,
              74,
              119,
              89,
              88,
              78,
              122,
              100,
              50,
              57,
              121,
              90,
              67,
              73,
              54,
              73,
              109,
              78,
              85,
              82,
              107,
              90,
              79,
              100,
              71,
              100,
              80,
              87,
              85,
              104,
              76,
              81,
              51,
              90,
              108,
              84,
              121,
              73,
              115,
              73,
              109,
              108,
              104,
              100,
              67,
              73,
              54,
              77,
              84,
              89,
              52,
              78,
              84,
              89,
              121,
              79,
              84,
              81,
              121,
              79,
              83,
              119,
              105,
              90,
              88,
              104,
              119,
              73,
              106,
              111,
              120,
              78,
              106,
              103,
              49,
              78,
              106,
              77,
              119,
              77,
              68,
              73,
              53,
              102,
              81,
              46,
              90,
              104,
              48,
              73,
              108,
              52,
              88,
              65,
              110,
              45,
              54,
              100,
              71,
              48,
              87,
              90,
              77,
              75,
              104,
              104,
              68,
              95,
              79,
              49,
              120,
              50,
              112,
              114,
              118,
              81,
              86,
              78,
              83,
              118,
              69,
              87,
              90,
              86,
              88,
              99,
              49,
              118,
              99,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 44,
          "responseSize": 283
        },
        "id": "825e0422-ffef-4dd9-8d8e-8d4275feec7b",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso e token de auth",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "aa1589dc-648c-4995-b230-e3c0b4428fbf",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2e116d02-d5a6-4c77-af8b-9356a9ee2147"
        },
        "item": {
          "id": "3502bc56-7157-4581-90a5-6704a37d36da",
          "name": "Listar produtos cadastrados",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d8586ac-2ed6-4a73-b16c-af3d455e3ce7",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"produtos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                  "                \"properties\": {\r",
                  "                    \"nome\": { \"type\": \"string\" },\r",
                  "                    \"preco\": { \"type\": \"integer\" },\r",
                  "                    \"descricao\": { \"type\": \"string\" },\r",
                  "                    \"quantidade\": { \"type\": \"integer\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "776e4e1f-8e92-4786-926f-3c9b4fcb8c5f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cb633017-689f-4863-a2d6-fd3cecfab27a",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "21020eeb-96cf-41c1-b38c-40c750cd0286",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "79093d13-1237-4393-8705-88e5f6f07efb"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "fef62b145d569f8116a586e727a4f5d9"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:49 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "1520"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              108,
              101,
              101,
              107,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              50,
              49,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              71,
              111,
              114,
              103,
              101,
              111,
              117,
              115,
              32,
              67,
              111,
              116,
              116,
              111,
              110,
              32,
              84,
              97,
              98,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              56,
              48,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              49,
              50,
              101,
              71,
              121,
              66,
              103,
              51,
              81,
              121,
              109,
              86,
              83,
              108,
              104,
              48,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              116,
              101,
              99,
              104,
              32,
              77,
              88,
              32,
              86,
              101,
              114,
              116,
              105,
              99,
              97,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              55,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              66,
              101,
              101,
              74,
              104,
              53,
              108,
              122,
              51,
              107,
              54,
              107,
              83,
              73,
              122,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              32,
              54,
              48,
              32,
              112,
              111,
              108,
              101,
              103,
              97,
              100,
              97,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              50,
              52,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              84,
              86,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              57,
              57,
              55,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              75,
              54,
              108,
              101,
              72,
              100,
              102,
              116,
              67,
              101,
              79,
              74,
              106,
              56,
              66,
              74,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              71,
              114,
              97,
              110,
              105,
              116,
              101,
              32,
              67,
              97,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              50,
              54,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              76,
              105,
              99,
              101,
              110,
              115,
              101,
              100,
              32,
              83,
              111,
              102,
              116,
              32,
              67,
              104,
              101,
              101,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              79,
              103,
              112,
              114,
              79,
              113,
              119,
              120,
              80,
              109,
              109,
              115,
              110,
              52,
              71,
              99,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              82,
              117,
              115,
              116,
              105,
              99,
              32,
              83,
              111,
              102,
              116,
              32,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              54,
              52,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              78,
              101,
              119,
              32,
              65,
              66,
              67,
              32,
              49,
              51,
              32,
              57,
              51,
              55,
              48,
              44,
              32,
              49,
              51,
              46,
              51,
              44,
              32,
              53,
              116,
              104,
              32,
              71,
              101,
              110,
              32,
              67,
              111,
              114,
              101,
              65,
              53,
              45,
              56,
              50,
              53,
              48,
              85,
              44,
              32,
              56,
              71,
              66,
              32,
              82,
              65,
              77,
              44,
              32,
              50,
              53,
              54,
              71,
              66,
              32,
              83,
              83,
              68,
              44,
              32,
              112,
              111,
              119,
              101,
              114,
              32,
              85,
              72,
              68,
              32,
              71,
              114,
              97,
              112,
              104,
              105,
              99,
              115,
              44,
              32,
              79,
              83,
              32,
              49,
              48,
              32,
              72,
              111,
              109,
              101,
              44,
              32,
              79,
              83,
              32,
              79,
              102,
              102,
              105,
              99,
              101,
              32,
              65,
              32,
              38,
              32,
              74,
              32,
              50,
              48,
              49,
              54,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              109,
              34,
              58,
              32,
              34,
              67,
              58,
              92,
              92,
              102,
              97,
              107,
              101,
              112,
              97,
              116,
              104,
              92,
              92,
              109,
              105,
              97,
              109,
              105,
              71,
              117,
              97,
              114,
              100,
              72,
              111,
              117,
              115,
              101,
              46,
              112,
              110,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              118,
              83,
              105,
              105,
              76,
              66,
              86,
              88,
              54,
              52,
              106,
              76,
              106,
              81,
              68,
              70,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              105,
              99,
              101,
              110,
              115,
              101,
              100,
              32,
              70,
              114,
              101,
              115,
              104,
              32,
              66,
              97,
              99,
              111,
              110,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              69,
              114,
              103,
              111,
              110,
              111,
              109,
              105,
              99,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              118,
              101,
              32,
              99,
              104,
              97,
              105,
              114,
              32,
              117,
              112,
              104,
              111,
              108,
              115,
              116,
              101,
              114,
              101,
              100,
              32,
              105,
              110,
              32,
              98,
              111,
              110,
              100,
              101,
              100,
              32,
              98,
              108,
              97,
              99,
              107,
              32,
              108,
              101,
              97,
              116,
              104,
              101,
              114,
              32,
              97,
              110,
              100,
              32,
              80,
              86,
              67,
              32,
              112,
              97,
              100,
              100,
              101,
              100,
              32,
              115,
              101,
              97,
              116,
              32,
              97,
              110,
              100,
              32,
              98,
              97,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              97,
              108,
              108,
              45,
              100,
              97,
              121,
              32,
              99,
              111,
              109,
              102,
              111,
              114,
              116,
              32,
              97,
              110,
              100,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              118,
              87,
              114,
              80,
              77,
              109,
              77,
              87,
              86,
              116,
              57,
              101,
              50,
              75,
              118,
              55,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 49,
          "responseSize": 1520
        },
        "id": "3502bc56-7157-4581-90a5-6704a37d36da",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c84e9aeb-fd64-436a-af5d-4d7be4089cd0",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66c17eb6-f804-46b5-8005-85af9560aca4"
        },
        "item": {
          "id": "0752d071-a67b-4b25-8fc9-59d2a4376b3a",
          "name": "Cadastrar produto",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f39b7211-1b87-4d43-94c6-d045e5a0a028",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "69c1cae5-ce4f-4532-baf5-f2ce8cf6811f"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "32869862-1afa-4db1-9221-d519e0cf3868",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "23111706-9327-4fd4-92cb-5878f73ad237"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkhhZGxleUBxYS5jb20uYnIiLCJwYXNzd29yZCI6ImNURkZOdGdPWUhLQ3ZlTyIsImlhdCI6MTY4NTYyOTQyOSwiZXhwIjoxNjg1NjMwMDI5fQ.Zh0Il4XAn-6dG0WZMKhhD_O1x2prvQVNSvEWZVXc1vc"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e9ab6495-c7c4-487d-9e28-7d0a71c48773",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "115",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"Small Plastic Shirt\",\r\n  \"preco\": 573,\r\n  \"descricao\": \"Rustic Steel Towels\",\r\n  \"quantidade\": 888\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "8b364da6-423a-4b24-8148-cf193fc10726",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "a0060040-053e-4076-8157-b89dfeb6fe58"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "1e48c66b299716feac63939efd4fbade"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:50 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              106,
              67,
              86,
              66,
              108,
              120,
              75,
              75,
              102,
              51,
              120,
              76,
              66,
              55,
              109,
              112,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 49,
          "responseSize": 82
        },
        "id": "0752d071-a67b-4b25-8fc9-59d2a4376b3a",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3b5a78c1-421a-4be7-81e0-90ec0a6cb4a9",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5783f1cf-42d7-4318-8ab3-a1bc9f3aad79"
        },
        "item": {
          "id": "1f680cd3-0012-443f-aa77-35a2cc65e6c3",
          "name": "Cadastrar carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cd1ee1c-4bc6-48d1-b411-9ef6b96634f9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "d107aa80-69e0-4bcf-b2ca-b78d84b5ba4d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkhhZGxleUBxYS5jb20uYnIiLCJwYXNzd29yZCI6ImNURkZOdGdPWUhLQ3ZlTyIsImlhdCI6MTY4NTYyOTQyOSwiZXhwIjoxNjg1NjMwMDI5fQ.Zh0Il4XAn-6dG0WZMKhhD_O1x2prvQVNSvEWZVXc1vc"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95ba97ba-50b9-419d-bbdc-8abcca05a277",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "103",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"jCVBlxKKf3xLB7mp\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7898af76-8535-4eb8-8304-1fc1c12ab715",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "5906649e-641a-4c4c-bf1c-bd86f0248ff7"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "1587a2f5ef03f46d12070ace158f2500"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:50 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              80,
              121,
              121,
              51,
              106,
              70,
              115,
              112,
              86,
              73,
              115,
              82,
              65,
              52,
              119,
              119,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 48,
          "responseSize": 82
        },
        "id": "1f680cd3-0012-443f-aa77-35a2cc65e6c3",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "96aeec85-8222-478d-ba30-11b737041279",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7e7d2d97-d7d3-49eb-b45b-9a05dcd0d9f2"
        },
        "item": {
          "id": "f7a7b085-f5ac-4ad5-ab51-736d7171c313",
          "name": "Buscar carrinho por ID",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [
                {
                  "key": "_id",
                  "value": "{{idCarrinho}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b5d74ca0-3a00-48bb-aeb4-70bd464f6a96",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"carrinhos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                  "                \"properties\": {                    \r",
                  "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                  "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                  "                    \"idUsuario\": { \"type\": \"string\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                    \"produtos\":{\r",
                  "                        //Valido o terceiro nível do schema\r",
                  "                        \"type\": \"array\",\r",
                  "                        \"items\": {\r",
                  "                            \"type\":\"object\",\r",
                  "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                  "                            \"properties\": {\r",
                  "                                \"idProduto\": { \"type\": \"string\" },\r",
                  "                                \"quantidade\": { \"type\": \"integer\" },\r",
                  "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                  "                            }\r",
                  "                        }\r",
                  "                    }\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "79e3a08b-76da-4486-89d1-55b63518488c"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [
              {
                "key": "_id",
                "value": "Pyy3jFspVIsRA4ww"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkhhZGxleUBxYS5jb20uYnIiLCJwYXNzd29yZCI6ImNURkZOdGdPWUhLQ3ZlTyIsImlhdCI6MTY4NTYyOTQyOSwiZXhwIjoxNjg1NjMwMDI5fQ.Zh0Il4XAn-6dG0WZMKhhD_O1x2prvQVNSvEWZVXc1vc"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3703fe2a-ce00-4617-b631-bf63b83101a5",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "74c61f1c-1fc4-40af-af8f-c8f893d0a9d2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "4c3bd522-3018-4191-8ddb-6081bae15148"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "93454390f93217dcc126b24c10ac5287"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:50 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "425"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              114,
              114,
              105,
              110,
              104,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              80,
              114,
              111,
              100,
              117,
              116,
              111,
              34,
              58,
              32,
              34,
              106,
              67,
              86,
              66,
              108,
              120,
              75,
              75,
              102,
              51,
              120,
              76,
              66,
              55,
              109,
              112,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              85,
              110,
              105,
              116,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              53,
              55,
              51,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              53,
              55,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              85,
              115,
              117,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              34,
              103,
              80,
              52,
              71,
              78,
              49,
              72,
              48,
              122,
              116,
              80,
              80,
              86,
              109,
              52,
              84,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              80,
              121,
              121,
              51,
              106,
              70,
              115,
              112,
              86,
              73,
              115,
              82,
              65,
              52,
              119,
              119,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 45,
          "responseSize": 425
        },
        "id": "f7a7b085-f5ac-4ad5-ab51-736d7171c313",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "02728d55-2626-4b39-8260-1819ea595808",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "36e4ad55-cec0-44bd-afd7-9198fe366ceb"
        },
        "item": {
          "id": "3ab19518-73e2-44b2-8c2c-3ea619d8d8c7",
          "name": "Excluir carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos",
                "concluir-compra"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e358ae78-8bc3-4c82-8728-3c43b0332693",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                  "});"
                ],
                "_lastExecutionId": "bba49ba6-7243-4500-9d69-b146e66d4b78"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos",
              "concluir-compra"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkhhZGxleUBxYS5jb20uYnIiLCJwYXNzd29yZCI6ImNURkZOdGdPWUhLQ3ZlTyIsImlhdCI6MTY4NTYyOTQyOSwiZXhwIjoxNjg1NjMwMDI5fQ.Zh0Il4XAn-6dG0WZMKhhD_O1x2prvQVNSvEWZVXc1vc"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7fb359b3-7e50-444e-b823-a73e033d72bf",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "2bc8bf65-d108-4b46-9502-864e6d54153d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "a056f02f-9028-4123-a653-151ac7efbbe4"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "84b279d119495600ba7e2526bd6371ed"
            },
            {
              "key": "Date",
              "value": "Thu, 01 Jun 2023 14:23:50 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "51"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              82,
              101,
              103,
              105,
              115,
              116,
              114,
              111,
              32,
              101,
              120,
              99,
              108,
              117,
              195,
              173,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 52,
          "responseSize": 51
        },
        "id": "3ab19518-73e2-44b2-8c2c-3ea619d8d8c7",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 2525
    },
    "failures": [],
    "error": null
  }
}