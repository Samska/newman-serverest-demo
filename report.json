{
  "collection": {
    "_": {
      "postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "exporter_id": "19215117"
    },
    "item": [
      {
        "id": "4a127977-3c4a-44fe-af04-e76122066cd4",
        "name": "Usuários",
        "item": [
          {
            "id": "cb5b3871-7938-479c-a051-873ce4d2887e",
            "name": "Cadastrar usuário",
            "request": {
              "url": {
                "path": [
                  "usuarios"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e3d91520-21dc-47d2-b06c-ad6e2c85f228",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7352b1da-8496-430c-aed0-518fbd045d78"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "53fed5b6-dbf6-408c-a07c-518d71adf952",
                  "type": "text/javascript",
                  "exec": [
                    "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                    "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "var email = nome + \"@qa.com.br\";\r",
                    "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                    "pm.environment.set(\"email\", email);\r",
                    "pm.environment.set(\"password\", password);"
                  ],
                  "_lastExecutionId": "f1fd844c-172d-4c20-81c4-c83a29f79196"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b2f37edd-31d1-4951-a576-4394f9bd4738",
        "name": "Login",
        "item": [
          {
            "id": "66473de7-ca4d-4bb6-ae14-00e96f268bfe",
            "name": "Login",
            "request": {
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c4a3174b-4da2-4842-aca2-00fc0b9f3aa3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('authorization'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                    "});"
                  ],
                  "_lastExecutionId": "d80a1864-a8e6-4802-84c2-dbccecc5e8ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b10db49c-6787-41f9-b32c-a9a3e3574ee8",
        "name": "Produtos",
        "item": [
          {
            "id": "3e6fe910-b3d1-4075-9439-7ba3a1d91a0b",
            "name": "Listar produtos cadastrados",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "58055bb3-fc42-4931-9316-56da2ba3344e",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"produtos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                    "                \"properties\": {\r",
                    "                    \"nome\": { \"type\": \"string\" },\r",
                    "                    \"preco\": { \"type\": \"integer\" },\r",
                    "                    \"descricao\": { \"type\": \"string\" },\r",
                    "                    \"quantidade\": { \"type\": \"integer\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "c5e75a0c-e390-4560-a360-bc44a7915bca"
                }
              }
            ]
          },
          {
            "id": "aa6565a5-65e1-454b-92a1-d63c6e6f349b",
            "name": "Cadastrar produto",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a84e9132-5aa9-4761-97e0-05d9ea7a1d20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aa64bf3-4e23-4b04-8173-66c3b262d74a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dda8fd6b-da7a-4090-b015-13663c33fac9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "bda1053a-b4c3-4430-a46f-1a11396cb5e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3d5e9b2f-d204-485a-b647-ff55298bb841",
        "name": "Carrinhos",
        "item": [
          {
            "id": "dbca85f7-f783-426f-9e60-cffbf17c6773",
            "name": "Cadastrar carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9a6e87bd-708d-4f6b-85b4-8bd65addb3fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "704ec76d-90ac-4d57-9f6f-5ca890776b5c"
                }
              }
            ]
          },
          {
            "id": "06bd46ce-4006-4218-bee9-43a6ae6650a7",
            "name": "Buscar carrinho por ID",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [
                  {
                    "key": "_id",
                    "value": "{{idCarrinho}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6792d4fb-0534-4d99-ba3d-5e89b6b561c4",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"carrinhos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                    "                \"properties\": {                    \r",
                    "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                    "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                    "                    \"idUsuario\": { \"type\": \"string\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                    \"produtos\":{\r",
                    "                        //Valido o terceiro nível do schema\r",
                    "                        \"type\": \"array\",\r",
                    "                        \"items\": {\r",
                    "                            \"type\":\"object\",\r",
                    "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                    "                            \"properties\": {\r",
                    "                                \"idProduto\": { \"type\": \"string\" },\r",
                    "                                \"quantidade\": { \"type\": \"integer\" },\r",
                    "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                    "                            }\r",
                    "                        }\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "ed264937-b7e7-43a4-ba8e-09491fbd14c1"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "745d937d-0cda-46d3-9b04-81b29dbe7645",
            "name": "Excluir carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos",
                  "concluir-compra"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4b9bbb6f-2c7f-45fe-a552-06866a289786",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                    "});"
                  ],
                  "_lastExecutionId": "a83665f4-e4a2-4b61-97c1-4adea672bfc7"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "name": "serverest-tech-sharing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Conteúdo para o tech sharing de testes de API com Postman.\n\nAPI utilizada:\n\n**O ServeRest é uma API REST que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-06-07T21:59:12.400Z",
      "postman_exported_using": "Postman/9.20.3"
    },
    "id": "074a4de0-8ea4-4448-8538-4cbca77455eb",
    "name": "serverest-tech-sharing",
    "values": [
      {
        "type": "any",
        "value": "Reggie@qa.com.br",
        "key": "email"
      },
      {
        "type": "any",
        "value": "Z8itPmPbvYfrU7N",
        "key": "password"
      },
      {
        "type": "any",
        "value": "",
        "key": "authorization"
      },
      {
        "type": "any",
        "value": "https://serverest.dev",
        "key": "url"
      },
      {
        "type": "any",
        "value": "",
        "key": "idProduto"
      },
      {
        "type": "any",
        "value": "",
        "key": "idCarrinho"
      }
    ]
  },
  "globals": {
    "id": "ef60bd7b-871d-4b98-ac03-2604d7863e70",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 101.42857142857143,
      "responseMin": 71,
      "responseMax": 268,
      "responseSd": 68.03750466335701,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685116056087,
      "completed": 1685116057084
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c588b856-c93d-49c1-ad45-88f88c2e2f56",
          "httpRequestId": "d15cfc26-d927-4665-a22b-ba91d8dda683"
        },
        "item": {
          "id": "cb5b3871-7938-479c-a051-873ce4d2887e",
          "name": "Cadastrar usuário",
          "request": {
            "url": {
              "path": [
                "usuarios"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3d91520-21dc-47d2-b06c-ad6e2c85f228",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "7352b1da-8496-430c-aed0-518fbd045d78"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "53fed5b6-dbf6-408c-a07c-518d71adf952",
                "type": "text/javascript",
                "exec": [
                  "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                  "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "var email = nome + \"@qa.com.br\";\r",
                  "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                  "pm.environment.set(\"email\", email);\r",
                  "pm.environment.set(\"password\", password);"
                ],
                "_lastExecutionId": "f1fd844c-172d-4c20-81c4-c83a29f79196"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "usuarios"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7edb9954-b4c8-4bd9-afd8-c74534a75ccb",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "120",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"Reggie@qa.com.br\",\r\n  \"password\": \"Z8itPmPbvYfrU7N\",\r\n  \"administrador\": \"true\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b5334863-c772-4379-9ae7-75104dc91e20",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "2936eced-9943-4925-9dec-a454878f8017"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "b8a9c2b2a68e92971f451ea37e6c8180;o=1"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:36 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              100,
              106,
              109,
              90,
              55,
              75,
              108,
              111,
              105,
              76,
              73,
              100,
              111,
              70,
              67,
              55,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 268,
          "responseSize": 82
        },
        "id": "cb5b3871-7938-479c-a051-873ce4d2887e"
      },
      {
        "cursor": {
          "ref": "c7e472bf-0171-4a12-8452-cd59da2f2235",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fd3b0e5d-7fdb-4968-80a3-ba923c2bbdcb"
        },
        "item": {
          "id": "66473de7-ca4d-4bb6-ae14-00e96f268bfe",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4a3174b-4da2-4842-aca2-00fc0b9f3aa3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('authorization'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                  "});"
                ],
                "_lastExecutionId": "d80a1864-a8e6-4802-84c2-dbccecc5e8ff"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "login"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f6949d7e-985f-43ab-b190-c5bb3bd58543",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "69",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"Reggie@qa.com.br\",\r\n  \"password\": \"Z8itPmPbvYfrU7N\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "58ee4ee4-2775-41a0-a110-dda67c561abf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "cb74fb83-b7db-48e2-a17d-6764a4e95576"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "428a8c363fab703cf15fdf30ceb30549"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:36 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "283"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              110,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              66,
              101,
              97,
              114,
              101,
              114,
              32,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              108,
              98,
              87,
              70,
              112,
              98,
              67,
              73,
              54,
              73,
              108,
              74,
              108,
              90,
              50,
              100,
              112,
              90,
              85,
              66,
              120,
              89,
              83,
              53,
              106,
              98,
              50,
              48,
              117,
              89,
              110,
              73,
              105,
              76,
              67,
              74,
              119,
              89,
              88,
              78,
              122,
              100,
              50,
              57,
              121,
              90,
              67,
              73,
              54,
              73,
              108,
              111,
              52,
              97,
              88,
              82,
              81,
              98,
              86,
              66,
              105,
              100,
              108,
              108,
              109,
              99,
              108,
              85,
              51,
              84,
              105,
              73,
              115,
              73,
              109,
              108,
              104,
              100,
              67,
              73,
              54,
              77,
              84,
              89,
              52,
              78,
              84,
              69,
              120,
              78,
              106,
              65,
              49,
              78,
              105,
              119,
              105,
              90,
              88,
              104,
              119,
              73,
              106,
              111,
              120,
              78,
              106,
              103,
              49,
              77,
              84,
              69,
              50,
              78,
              106,
              85,
              50,
              102,
              81,
              46,
              54,
              116,
              108,
              98,
              122,
              45,
              97,
              82,
              108,
              57,
              120,
              85,
              117,
              102,
              45,
              77,
              113,
              112,
              85,
              115,
              113,
              105,
              105,
              89,
              95,
              74,
              54,
              109,
              48,
              51,
              107,
              72,
              81,
              109,
              81,
              66,
              85,
              55,
              89,
              117,
              67,
              112,
              69,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 78,
          "responseSize": 283
        },
        "id": "66473de7-ca4d-4bb6-ae14-00e96f268bfe",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso e token de auth",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Deve retornar status 200 com mensagem de sucesso e token de auth",
              "message": "expected 200 to deeply equal 201",
              "stack": "AssertionError: expected 200 to deeply equal 201\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "fc5a6c21-b10b-4164-b198-f62797208f0b",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3210adcf-4843-41ee-8e76-cffbcf4a5ad1"
        },
        "item": {
          "id": "3e6fe910-b3d1-4075-9439-7ba3a1d91a0b",
          "name": "Listar produtos cadastrados",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "58055bb3-fc42-4931-9316-56da2ba3344e",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"produtos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                  "                \"properties\": {\r",
                  "                    \"nome\": { \"type\": \"string\" },\r",
                  "                    \"preco\": { \"type\": \"integer\" },\r",
                  "                    \"descricao\": { \"type\": \"string\" },\r",
                  "                    \"quantidade\": { \"type\": \"integer\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "c5e75a0c-e390-4560-a360-bc44a7915bca"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0be1853f-c15b-4a30-83a4-591cb2bea738",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "47f0577d-21a6-4ae0-9538-15eaa3a1501a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "822c518a-2daf-4276-9e1d-dfd4ac4346a4"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "00785a88224c1afebf287fbfa4bb17e3"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:36 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "4246"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              84,
              97,
              115,
              116,
              121,
              32,
              87,
              111,
              111,
              100,
              101,
              110,
              32,
              71,
              108,
              111,
              118,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              49,
              51,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              76,
              105,
              99,
              101,
              110,
              115,
              101,
              100,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              84,
              111,
              119,
              101,
              108,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              56,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              65,
              69,
              78,
              81,
              104,
              83,
              77,
              116,
              84,
              107,
              79,
              68,
              56,
              53,
              109,
              75,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              116,
              101,
              99,
              104,
              32,
              77,
              88,
              32,
              86,
              101,
              114,
              116,
              105,
              99,
              97,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              55,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              66,
              101,
              101,
              74,
              104,
              53,
              108,
              122,
              51,
              107,
              54,
              107,
              83,
              73,
              122,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              105,
              99,
              101,
              110,
              115,
              101,
              100,
              32,
              82,
              117,
              98,
              98,
              101,
              114,
              32,
              83,
              104,
              105,
              114,
              116,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              50,
              53,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              85,
              110,
              98,
              114,
              97,
              110,
              100,
              101,
              100,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              67,
              97,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              55,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              66,
              108,
              97,
              78,
              113,
              117,
              104,
              69,
              67,
              108,
              108,
              106,
              100,
              99,
              48,
              108,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              82,
              117,
              115,
              116,
              105,
              99,
              32,
              82,
              117,
              98,
              98,
              101,
              114,
              32,
              67,
              104,
              101,
              101,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              57,
              48,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              82,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              71,
              114,
              97,
              110,
              105,
              116,
              101,
              32,
              66,
              105,
              107,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              54,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              70,
              83,
              70,
              121,
              73,
              88,
              106,
              66,
              101,
              86,
              84,
              99,
              83,
              65,
              103,
              112,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              108,
              101,
              101,
              107,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              67,
              104,
              97,
              105,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              50,
              54,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              85,
              110,
              98,
              114,
              97,
              110,
              100,
              101,
              100,
              32,
              71,
              114,
              97,
              110,
              105,
              116,
              101,
              32,
              67,
              104,
              105,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              56,
              55,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              71,
              48,
              86,
              84,
              68,
              118,
              103,
              54,
              49,
              88,
              74,
              80,
              76,
              115,
              81,
              50,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              80,
              114,
              97,
              99,
              116,
              105,
              99,
              97,
              108,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              66,
              97,
              108,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              56,
              50,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              72,
              97,
              110,
              100,
              109,
              97,
              100,
              101,
              32,
              82,
              117,
              98,
              98,
              101,
              114,
              32,
              83,
              97,
              117,
              115,
              97,
              103,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              55,
              48,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              71,
              48,
              110,
              104,
              87,
              65,
              103,
              111,
              71,
              103,
              55,
              98,
              103,
              83,
              112,
              66,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              82,
              117,
              98,
              98,
              101,
              114,
              32,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              57,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              83,
              108,
              101,
              101,
              107,
              32,
              67,
              111,
              116,
              116,
              111,
              110,
              32,
              67,
              104,
              101,
              101,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              57,
              56,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              71,
              108,
              114,
              98,
              68,
              82,
              87,
              86,
              81,
              112,
              73,
              120,
              85,
              120,
              52,
              101,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              32,
              54,
              48,
              32,
              112,
              111,
              108,
              101,
              103,
              97,
              100,
              97,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              50,
              52,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              84,
              86,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              57,
              57,
              55,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              75,
              54,
              108,
              101,
              72,
              100,
              102,
              116,
              67,
              101,
              79,
              74,
              106,
              56,
              66,
              74,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              80,
              114,
              97,
              99,
              116,
              105,
              99,
              97,
              108,
              32,
              87,
              111,
              111,
              100,
              101,
              110,
              32,
              84,
              117,
              110,
              97,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              78,
              101,
              119,
              32,
              114,
              97,
              110,
              103,
              101,
              32,
              111,
              102,
              32,
              102,
              111,
              114,
              109,
              97,
              108,
              32,
              115,
              104,
              105,
              114,
              116,
              115,
              32,
              97,
              114,
              101,
              32,
              100,
              101,
              115,
              105,
              103,
              110,
              101,
              100,
              32,
              107,
              101,
              101,
              112,
              105,
              110,
              103,
              32,
              121,
              111,
              117,
              32,
              105,
              110,
              32,
              109,
              105,
              110,
              100,
              46,
              32,
              87,
              105,
              116,
              104,
              32,
              102,
              105,
              116,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              116,
              121,
              108,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              105,
              108,
              108,
              32,
              109,
              97,
              107,
              101,
              32,
              121,
              111,
              117,
              32,
              115,
              116,
              97,
              110,
              100,
              32,
              97,
              112,
              97,
              114,
              116,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              77,
              83,
              84,
              90,
              106,
              67,
              119,
              98,
              117,
              73,
              57,
              105,
              120,
              51,
              54,
              70,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              73,
              110,
              99,
              114,
              101,
              100,
              105,
              98,
              108,
              101,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              51,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              71,
              111,
              114,
              103,
              101,
              111,
              117,
              115,
              32,
              80,
              108,
              97,
              115,
              116,
              105,
              99,
              32,
              70,
              105,
              115,
              104,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              52,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              78,
              54,
              68,
              52,
              117,
              51,
              71,
              80,
              70,
              106,
              73,
              97,
              98,
              82,
              114,
              86,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              70,
              97,
              110,
              116,
              97,
              115,
              116,
              105,
              99,
              32,
              82,
              117,
              98,
              98,
              101,
              114,
              32,
              66,
              97,
              108,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              56,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              82,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              83,
              116,
              101,
              101,
              108,
              32,
              84,
              97,
              98,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              50,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              98,
              72,
              102,
              110,
              107,
              90,
              72,
              49,
              100,
              107,
              72,
              112,
              57,
              81,
              89,
              108,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              70,
              97,
              110,
              116,
              97,
              115,
              116,
              105,
              99,
              32,
              67,
              111,
              110,
              99,
              114,
              101,
              116,
              101,
              32,
              83,
              111,
              97,
              112,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              51,
              57,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              73,
              110,
              99,
              114,
              101,
              100,
              105,
              98,
              108,
              101,
              32,
              82,
              117,
              98,
              98,
              101,
              114,
              32,
              83,
              97,
              117,
              115,
              97,
              103,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              53,
              54,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              98,
              75,
              81,
              119,
              79,
              65,
              89,
              84,
              69,
              50,
              80,
              69,
              66,
              103,
              119,
              73,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              82,
              117,
              115,
              116,
              105,
              99,
              32,
              67,
              111,
              116,
              116,
              111,
              110,
              32,
              70,
              105,
              115,
              104,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              49,
              57,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              72,
              97,
              110,
              100,
              109,
              97,
              100,
              101,
              32,
              80,
              108,
              97,
              115,
              116,
              105,
              99,
              32,
              67,
              104,
              97,
              105,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              54,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              105,
              88,
              76,
              104,
              84,
              79,
              70,
              117,
              76,
              66,
              52,
              109,
              107,
              48,
              56,
              83,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              70,
              97,
              110,
              116,
              97,
              115,
              116,
              105,
              99,
              32,
              67,
              111,
              116,
              116,
              111,
              110,
              32,
              66,
              105,
              107,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              55,
              53,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              73,
              110,
              99,
              114,
              101,
              100,
              105,
              98,
              108,
              101,
              32,
              67,
              111,
              110,
              99,
              114,
              101,
              116,
              101,
              32,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              55,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              107,
              57,
              53,
              113,
              73,
              120,
              90,
              113,
              69,
              74,
              104,
              77,
              71,
              122,
              86,
              53,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              65,
              119,
              101,
              115,
              111,
              109,
              101,
              32,
              71,
              114,
              97,
              110,
              105,
              116,
              101,
              32,
              83,
              97,
              108,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              49,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              82,
              117,
              115,
              116,
              105,
              99,
              32,
              67,
              111,
              110,
              99,
              114,
              101,
              116,
              101,
              32,
              66,
              105,
              107,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              55,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              109,
              115,
              68,
              105,
              98,
              52,
              102,
              55,
              75,
              52,
              108,
              82,
              117,
              105,
              101,
              100,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              84,
              97,
              115,
              116,
              121,
              32,
              83,
              111,
              102,
              116,
              32,
              66,
              97,
              99,
              111,
              110,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              56,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              78,
              101,
              119,
              32,
              65,
              66,
              67,
              32,
              49,
              51,
              32,
              57,
              51,
              55,
              48,
              44,
              32,
              49,
              51,
              46,
              51,
              44,
              32,
              53,
              116,
              104,
              32,
              71,
              101,
              110,
              32,
              67,
              111,
              114,
              101,
              65,
              53,
              45,
              56,
              50,
              53,
              48,
              85,
              44,
              32,
              56,
              71,
              66,
              32,
              82,
              65,
              77,
              44,
              32,
              50,
              53,
              54,
              71,
              66,
              32,
              83,
              83,
              68,
              44,
              32,
              112,
              111,
              119,
              101,
              114,
              32,
              85,
              72,
              68,
              32,
              71,
              114,
              97,
              112,
              104,
              105,
              99,
              115,
              44,
              32,
              79,
              83,
              32,
              49,
              48,
              32,
              72,
              111,
              109,
              101,
              44,
              32,
              79,
              83,
              32,
              79,
              102,
              102,
              105,
              99,
              101,
              32,
              65,
              32,
              38,
              32,
              74,
              32,
              50,
              48,
              49,
              54,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              109,
              34,
              58,
              32,
              34,
              67,
              58,
              92,
              92,
              102,
              97,
              107,
              101,
              112,
              97,
              116,
              104,
              92,
              92,
              109,
              105,
              97,
              109,
              105,
              71,
              117,
              97,
              114,
              100,
              72,
              111,
              117,
              115,
              101,
              46,
              112,
              110,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              111,
              77,
              71,
              113,
              73,
              121,
              118,
              55,
              68,
              121,
              106,
              78,
              106,
              98,
              102,
              102,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              73,
              110,
              116,
              101,
              108,
              108,
              105,
              103,
              101,
              110,
              116,
              32,
              83,
              116,
              101,
              101,
              108,
              32,
              66,
              105,
              107,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              49,
              54,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              70,
              114,
              111,
              122,
              101,
              110,
              32,
              66,
              105,
              107,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              50,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              117,
              86,
              106,
              82,
              102,
              83,
              77,
              107,
              48,
              84,
              70,
              55,
              85,
              49,
              83,
              86,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              82,
              117,
              115,
              116,
              105,
              99,
              32,
              70,
              114,
              101,
              115,
              104,
              32,
              67,
              97,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              54,
              52,
              53,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              76,
              105,
              99,
              101,
              110,
              115,
              101,
              100,
              32,
              87,
              111,
              111,
              100,
              101,
              110,
              32,
              70,
              105,
              115,
              104,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              118,
              76,
              107,
              120,
              49,
              65,
              100,
              107,
              112,
              107,
              105,
              73,
              85,
              75,
              70,
              74,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              77,
              101,
              116,
              97,
              108,
              32,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              49,
              48,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              82,
              117,
              115,
              116,
              105,
              99,
              32,
              83,
              116,
              101,
              101,
              108,
              32,
              80,
              97,
              110,
              116,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              56,
              48,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              120,
              108,
              72,
              86,
              51,
              77,
              100,
              71,
              108,
              57,
              73,
              104,
              106,
              111,
              52,
              73,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 75,
          "responseSize": 4246
        },
        "id": "3e6fe910-b3d1-4075-9439-7ba3a1d91a0b",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c8a6ddf9-abe6-4ddc-bba5-fc7bd1cd7fdd",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "13960f0d-053f-4197-afd7-822239334ec1"
        },
        "item": {
          "id": "aa6565a5-65e1-454b-92a1-d63c6e6f349b",
          "name": "Cadastrar produto",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a84e9132-5aa9-4761-97e0-05d9ea7a1d20",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "6aa64bf3-4e23-4b04-8173-66c3b262d74a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "dda8fd6b-da7a-4090-b015-13663c33fac9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "bda1053a-b4c3-4430-a46f-1a11396cb5e4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "04f4e6c4-1a89-4040-a187-c8a96b1208e0",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "122",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"Practical Plastic Shoes\",\r\n  \"preco\": 556,\r\n  \"descricao\": \"Intelligent Steel Tuna\",\r\n  \"quantidade\": 272\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e717120e-72a8-42dd-8cc9-cfe3e4560380",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "7a373775-a5b5-434f-8c84-e5627d6812e3"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "4162d73ffaec946beead8720a30633d5"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:36 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "103"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              100,
              101,
              32,
              97,
              99,
              101,
              115,
              115,
              111,
              32,
              97,
              117,
              115,
              101,
              110,
              116,
              101,
              44,
              32,
              105,
              110,
              118,
              195,
              161,
              108,
              105,
              100,
              111,
              44,
              32,
              101,
              120,
              112,
              105,
              114,
              97,
              100,
              111,
              32,
              111,
              117,
              32,
              117,
              115,
              117,
              195,
              161,
              114,
              105,
              111,
              32,
              100,
              111,
              32,
              116,
              111,
              107,
              101,
              110,
              32,
              110,
              195,
              163,
              111,
              32,
              101,
              120,
              105,
              115,
              116,
              101,
              32,
              109,
              97,
              105,
              115,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 74,
          "responseSize": 103
        },
        "id": "aa6565a5-65e1-454b-92a1-d63c6e6f349b",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
              "message": "expected 401 to deeply equal 201",
              "stack": "AssertionError: expected 401 to deeply equal 201\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "259281d0-66c5-4ff6-a6f9-a8ddfa2df7a1",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f68d3b9e-f180-4a96-8b71-ff3ed34f5116"
        },
        "item": {
          "id": "dbca85f7-f783-426f-9e60-cffbf17c6773",
          "name": "Cadastrar carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a6e87bd-708d-4f6b-85b4-8bd65addb3fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "704ec76d-90ac-4d57-9f6f-5ca890776b5c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f34dc5bd-66bb-4c18-b390-c7dd59304f5a",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "87",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "29cb8e34-f1e5-4bdb-af4d-264e5c97cb9f",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "35f93118-39b6-410b-a945-007f40e0a9a1"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "22d20ddd43a9d9bd0325e67810e36eb3"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:36 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "103"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              100,
              101,
              32,
              97,
              99,
              101,
              115,
              115,
              111,
              32,
              97,
              117,
              115,
              101,
              110,
              116,
              101,
              44,
              32,
              105,
              110,
              118,
              195,
              161,
              108,
              105,
              100,
              111,
              44,
              32,
              101,
              120,
              112,
              105,
              114,
              97,
              100,
              111,
              32,
              111,
              117,
              32,
              117,
              115,
              117,
              195,
              161,
              114,
              105,
              111,
              32,
              100,
              111,
              32,
              116,
              111,
              107,
              101,
              110,
              32,
              110,
              195,
              163,
              111,
              32,
              101,
              120,
              105,
              115,
              116,
              101,
              32,
              109,
              97,
              105,
              115,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 71,
          "responseSize": 103
        },
        "id": "dbca85f7-f783-426f-9e60-cffbf17c6773",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
              "message": "expected 401 to deeply equal 201",
              "stack": "AssertionError: expected 401 to deeply equal 201\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c48c92f-9898-4820-ad6b-9f7f2937b755",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1aba8ed0-193e-4aa1-83f3-103e6772a22f"
        },
        "item": {
          "id": "06bd46ce-4006-4218-bee9-43a6ae6650a7",
          "name": "Buscar carrinho por ID",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [
                {
                  "key": "_id",
                  "value": "{{idCarrinho}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6792d4fb-0534-4d99-ba3d-5e89b6b561c4",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"carrinhos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                  "                \"properties\": {                    \r",
                  "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                  "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                  "                    \"idUsuario\": { \"type\": \"string\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                    \"produtos\":{\r",
                  "                        //Valido o terceiro nível do schema\r",
                  "                        \"type\": \"array\",\r",
                  "                        \"items\": {\r",
                  "                            \"type\":\"object\",\r",
                  "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                  "                            \"properties\": {\r",
                  "                                \"idProduto\": { \"type\": \"string\" },\r",
                  "                                \"quantidade\": { \"type\": \"integer\" },\r",
                  "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                  "                            }\r",
                  "                        }\r",
                  "                    }\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "ed264937-b7e7-43a4-ba8e-09491fbd14c1"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [
              {
                "key": "_id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9310a7c7-c477-46f3-98a2-bd85dd1fb2d0",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3e16e152-5b49-45e4-ab7e-fcb75026fd51",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "5070ce64-fa2a-4310-9ad0-612e2a4449b0"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "1574a523e6db02469837b59628ba0a1c"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:36 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "44"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              114,
              114,
              105,
              110,
              104,
              111,
              115,
              34,
              58,
              32,
              91,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 72,
          "responseSize": 44
        },
        "id": "06bd46ce-4006-4218-bee9-43a6ae6650a7",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3cc651f7-8571-4368-bcb3-481640b89fe3",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "78f45387-c740-48db-877e-d65f4f5097ec"
        },
        "item": {
          "id": "745d937d-0cda-46d3-9b04-81b29dbe7645",
          "name": "Excluir carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos",
                "concluir-compra"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b9bbb6f-2c7f-45fe-a552-06866a289786",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                  "});"
                ],
                "_lastExecutionId": "a83665f4-e4a2-4b61-97c1-4adea672bfc7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos",
              "concluir-compra"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a48372df-4977-4eb8-9706-80dfb80de679",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "96e83029-c080-42fa-9783-002b898255a8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "11608304-8422-4419-ad0c-6f46fc276a68"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "dde0e48363320f9784ea216856c17637"
            },
            {
              "key": "Date",
              "value": "Fri, 26 May 2023 15:47:37 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "103"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              100,
              101,
              32,
              97,
              99,
              101,
              115,
              115,
              111,
              32,
              97,
              117,
              115,
              101,
              110,
              116,
              101,
              44,
              32,
              105,
              110,
              118,
              195,
              161,
              108,
              105,
              100,
              111,
              44,
              32,
              101,
              120,
              112,
              105,
              114,
              97,
              100,
              111,
              32,
              111,
              117,
              32,
              117,
              115,
              117,
              195,
              161,
              114,
              105,
              111,
              32,
              100,
              111,
              32,
              116,
              111,
              107,
              101,
              110,
              32,
              110,
              195,
              163,
              111,
              32,
              101,
              120,
              105,
              115,
              116,
              101,
              32,
              109,
              97,
              105,
              115,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 72,
          "responseSize": 103
        },
        "id": "745d937d-0cda-46d3-9b04-81b29dbe7645",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Deve retornar status 200 com mensagem de sucesso",
              "message": "expected 401 to deeply equal 200",
              "stack": "AssertionError: expected 401 to deeply equal 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 4964
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Deve retornar status 200 com mensagem de sucesso e token de auth",
          "message": "expected 200 to deeply equal 201",
          "stack": "AssertionError: expected 200 to deeply equal 201\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "c7e51b9ade2ffac7380df72a32b298b2",
          "id": "7b5856a8-f68d-46aa-9d9b-82c1ffcffde1",
          "timestamp": 1685116056518,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "66473de7-ca4d-4bb6-ae14-00e96f268bfe",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4a3174b-4da2-4842-aca2-00fc0b9f3aa3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('authorization'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                  "});"
                ],
                "_lastExecutionId": "d80a1864-a8e6-4802-84c2-dbccecc5e8ff"
              }
            }
          ]
        },
        "parent": {
          "id": "b2f37edd-31d1-4951-a576-4394f9bd4738",
          "name": "Login",
          "item": [
            {
              "id": "66473de7-ca4d-4bb6-ae14-00e96f268bfe",
              "name": "Login",
              "request": {
                "url": {
                  "path": [
                    "login"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4a3174b-4da2-4842-aca2-00fc0b9f3aa3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                      "    pm.expect(responseJson).to.have.property('authorization'); \r",
                      "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                      "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                      "});"
                    ],
                    "_lastExecutionId": "d80a1864-a8e6-4802-84c2-dbccecc5e8ff"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c7e472bf-0171-4a12-8452-cd59da2f2235",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fd3b0e5d-7fdb-4968-80a3-ba923c2bbdcb",
          "scriptId": "c4a3174b-4da2-4842-aca2-00fc0b9f3aa3",
          "execution": "d80a1864-a8e6-4802-84c2-dbccecc5e8ff"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
          "message": "expected 401 to deeply equal 201",
          "stack": "AssertionError: expected 401 to deeply equal 201\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "4ce750a2fa996cffd7b2ae446dfaa216",
          "id": "8b1a0564-00e8-48aa-a254-91793ab6f9b1",
          "timestamp": 1685116056768,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "aa6565a5-65e1-454b-92a1-d63c6e6f349b",
          "name": "Cadastrar produto",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a84e9132-5aa9-4761-97e0-05d9ea7a1d20",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "6aa64bf3-4e23-4b04-8173-66c3b262d74a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "dda8fd6b-da7a-4090-b015-13663c33fac9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "bda1053a-b4c3-4430-a46f-1a11396cb5e4"
              }
            }
          ]
        },
        "parent": {
          "id": "b10db49c-6787-41f9-b32c-a9a3e3574ee8",
          "name": "Produtos",
          "item": [
            {
              "id": "3e6fe910-b3d1-4075-9439-7ba3a1d91a0b",
              "name": "Listar produtos cadastrados",
              "request": {
                "url": {
                  "path": [
                    "produtos"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "58055bb3-fc42-4931-9316-56da2ba3344e",
                    "type": "text/javascript",
                    "exec": [
                      "const schema = {\r",
                      "    //Valido o primeiro nível do schema\r",
                      "    \"type\": \"object\",\r",
                      "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                      "    \"properties\": {\r",
                      "        \"quantidade\": { \"type\": \"integer\" },\r",
                      "        \"produtos\": {\r",
                      "            //Valido o segundo nível do schema\r",
                      "            \"type\": \"array\",\r",
                      "            \"items\": {\r",
                      "                \"type\": \"object\",\r",
                      "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                      "                \"properties\": {\r",
                      "                    \"nome\": { \"type\": \"string\" },\r",
                      "                    \"preco\": { \"type\": \"integer\" },\r",
                      "                    \"descricao\": { \"type\": \"string\" },\r",
                      "                    \"quantidade\": { \"type\": \"integer\" },\r",
                      "                    \"_id\": { \"type\": \"string\" },\r",
                      "                }\r",
                      "            }\r",
                      "        }\r",
                      "    }\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Valida o schema e status code\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "    //Valida o json schema\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});"
                    ],
                    "_lastExecutionId": "c5e75a0c-e390-4560-a360-bc44a7915bca"
                  }
                }
              ]
            },
            {
              "id": "aa6565a5-65e1-454b-92a1-d63c6e6f349b",
              "name": "Cadastrar produto",
              "request": {
                "url": {
                  "path": [
                    "produtos"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a84e9132-5aa9-4761-97e0-05d9ea7a1d20",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "6aa64bf3-4e23-4b04-8173-66c3b262d74a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "dda8fd6b-da7a-4090-b015-13663c33fac9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                      "    pm.expect(responseJson).to.have.property('_id'); \r",
                      "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                      "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                      "});"
                    ],
                    "_lastExecutionId": "bda1053a-b4c3-4430-a46f-1a11396cb5e4"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c8a6ddf9-abe6-4ddc-bba5-fc7bd1cd7fdd",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "13960f0d-053f-4197-afd7-822239334ec1",
          "scriptId": "dda8fd6b-da7a-4090-b015-13663c33fac9",
          "execution": "bda1053a-b4c3-4430-a46f-1a11396cb5e4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
          "message": "expected 401 to deeply equal 201",
          "stack": "AssertionError: expected 401 to deeply equal 201\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "3d802ce77e360d993753ef30606f1459",
          "id": "0204bd29-e123-416e-a038-6e51f141323b",
          "timestamp": 1685116056861,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "dbca85f7-f783-426f-9e60-cffbf17c6773",
          "name": "Cadastrar carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a6e87bd-708d-4f6b-85b4-8bd65addb3fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "704ec76d-90ac-4d57-9f6f-5ca890776b5c"
              }
            }
          ]
        },
        "parent": {
          "id": "3d5e9b2f-d204-485a-b647-ff55298bb841",
          "name": "Carrinhos",
          "item": [
            {
              "id": "dbca85f7-f783-426f-9e60-cffbf17c6773",
              "name": "Cadastrar carrinho",
              "request": {
                "url": {
                  "path": [
                    "carrinhos"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a6e87bd-708d-4f6b-85b4-8bd65addb3fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                      "    pm.expect(responseJson).to.have.property('_id'); \r",
                      "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                      "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                      "});"
                    ],
                    "_lastExecutionId": "704ec76d-90ac-4d57-9f6f-5ca890776b5c"
                  }
                }
              ]
            },
            {
              "id": "06bd46ce-4006-4218-bee9-43a6ae6650a7",
              "name": "Buscar carrinho por ID",
              "request": {
                "url": {
                  "path": [
                    "carrinhos"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [
                    {
                      "key": "_id",
                      "value": "{{idCarrinho}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6792d4fb-0534-4d99-ba3d-5e89b6b561c4",
                    "type": "text/javascript",
                    "exec": [
                      "const schema = {\r",
                      "    //Valido o primeiro nível do schema\r",
                      "    \"type\": \"object\",\r",
                      "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                      "    \"properties\": {\r",
                      "        \"quantidade\": { \"type\": \"integer\" },\r",
                      "        \"carrinhos\": {\r",
                      "            //Valido o segundo nível do schema\r",
                      "            \"type\": \"array\",\r",
                      "            \"items\": {\r",
                      "                \"type\": \"object\",\r",
                      "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                      "                \"properties\": {                    \r",
                      "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                      "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                      "                    \"idUsuario\": { \"type\": \"string\" },\r",
                      "                    \"_id\": { \"type\": \"string\" },\r",
                      "                    \"produtos\":{\r",
                      "                        //Valido o terceiro nível do schema\r",
                      "                        \"type\": \"array\",\r",
                      "                        \"items\": {\r",
                      "                            \"type\":\"object\",\r",
                      "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                      "                            \"properties\": {\r",
                      "                                \"idProduto\": { \"type\": \"string\" },\r",
                      "                                \"quantidade\": { \"type\": \"integer\" },\r",
                      "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                      "                            }\r",
                      "                        }\r",
                      "                    }\r",
                      "                }\r",
                      "            }\r",
                      "        }\r",
                      "    }\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Valida o schema e status code\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "    //Valida o json schema\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});"
                    ],
                    "_lastExecutionId": "ed264937-b7e7-43a4-ba8e-09491fbd14c1"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "745d937d-0cda-46d3-9b04-81b29dbe7645",
              "name": "Excluir carrinho",
              "request": {
                "url": {
                  "path": [
                    "carrinhos",
                    "concluir-compra"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b9bbb6f-2c7f-45fe-a552-06866a289786",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                      "});"
                    ],
                    "_lastExecutionId": "a83665f4-e4a2-4b61-97c1-4adea672bfc7"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "259281d0-66c5-4ff6-a6f9-a8ddfa2df7a1",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f68d3b9e-f180-4a96-8b71-ff3ed34f5116",
          "scriptId": "9a6e87bd-708d-4f6b-85b4-8bd65addb3fa",
          "execution": "704ec76d-90ac-4d57-9f6f-5ca890776b5c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Deve retornar status 200 com mensagem de sucesso",
          "message": "expected 401 to deeply equal 200",
          "stack": "AssertionError: expected 401 to deeply equal 200\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "135fead48cef358672b6bb4dc4313f9e",
          "id": "14828965-2a94-4085-941c-be7a39e54650",
          "timestamp": 1685116057077,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "745d937d-0cda-46d3-9b04-81b29dbe7645",
          "name": "Excluir carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos",
                "concluir-compra"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b9bbb6f-2c7f-45fe-a552-06866a289786",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                  "});"
                ],
                "_lastExecutionId": "a83665f4-e4a2-4b61-97c1-4adea672bfc7"
              }
            }
          ]
        },
        "parent": {
          "id": "3d5e9b2f-d204-485a-b647-ff55298bb841",
          "name": "Carrinhos",
          "item": [
            {
              "id": "dbca85f7-f783-426f-9e60-cffbf17c6773",
              "name": "Cadastrar carrinho",
              "request": {
                "url": {
                  "path": [
                    "carrinhos"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a6e87bd-708d-4f6b-85b4-8bd65addb3fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                      "    pm.expect(responseJson).to.have.property('_id'); \r",
                      "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                      "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                      "});"
                    ],
                    "_lastExecutionId": "704ec76d-90ac-4d57-9f6f-5ca890776b5c"
                  }
                }
              ]
            },
            {
              "id": "06bd46ce-4006-4218-bee9-43a6ae6650a7",
              "name": "Buscar carrinho por ID",
              "request": {
                "url": {
                  "path": [
                    "carrinhos"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [
                    {
                      "key": "_id",
                      "value": "{{idCarrinho}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6792d4fb-0534-4d99-ba3d-5e89b6b561c4",
                    "type": "text/javascript",
                    "exec": [
                      "const schema = {\r",
                      "    //Valido o primeiro nível do schema\r",
                      "    \"type\": \"object\",\r",
                      "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                      "    \"properties\": {\r",
                      "        \"quantidade\": { \"type\": \"integer\" },\r",
                      "        \"carrinhos\": {\r",
                      "            //Valido o segundo nível do schema\r",
                      "            \"type\": \"array\",\r",
                      "            \"items\": {\r",
                      "                \"type\": \"object\",\r",
                      "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                      "                \"properties\": {                    \r",
                      "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                      "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                      "                    \"idUsuario\": { \"type\": \"string\" },\r",
                      "                    \"_id\": { \"type\": \"string\" },\r",
                      "                    \"produtos\":{\r",
                      "                        //Valido o terceiro nível do schema\r",
                      "                        \"type\": \"array\",\r",
                      "                        \"items\": {\r",
                      "                            \"type\":\"object\",\r",
                      "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                      "                            \"properties\": {\r",
                      "                                \"idProduto\": { \"type\": \"string\" },\r",
                      "                                \"quantidade\": { \"type\": \"integer\" },\r",
                      "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                      "                            }\r",
                      "                        }\r",
                      "                    }\r",
                      "                }\r",
                      "            }\r",
                      "        }\r",
                      "    }\r",
                      "}\r",
                      "\r",
                      "pm.test(\"Valida o schema e status code\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "    //Valida o json schema\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});"
                    ],
                    "_lastExecutionId": "ed264937-b7e7-43a4-ba8e-09491fbd14c1"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "745d937d-0cda-46d3-9b04-81b29dbe7645",
              "name": "Excluir carrinho",
              "request": {
                "url": {
                  "path": [
                    "carrinhos",
                    "concluir-compra"
                  ],
                  "host": [
                    "{{url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{authorization}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b9bbb6f-2c7f-45fe-a552-06866a289786",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                      "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                      "    var responseJson = pm.response.json();\r",
                      "    //Valido o status code e propriedades do response\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                      "});"
                    ],
                    "_lastExecutionId": "a83665f4-e4a2-4b61-97c1-4adea672bfc7"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3cc651f7-8571-4368-bcb3-481640b89fe3",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "78f45387-c740-48db-877e-d65f4f5097ec",
          "scriptId": "4b9bbb6f-2c7f-45fe-a552-06866a289786",
          "execution": "a83665f4-e4a2-4b61-97c1-4adea672bfc7"
        }
      }
    ],
    "error": null
  }
}