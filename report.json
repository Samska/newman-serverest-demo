{
  "collection": {
    "_": {
      "postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "exporter_id": "19215117"
    },
    "item": [
      {
        "id": "ba8b87fd-20b9-4ee8-8ec0-a8a80faa29a4",
        "name": "Usuários",
        "item": [
          {
            "id": "7a65ce59-6e21-4bfb-8905-32ad7f570772",
            "name": "Cadastrar usuário",
            "request": {
              "url": {
                "path": [
                  "usuarios"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5e29e271-017e-4bb3-9aeb-69f5dcba1e46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25703f0a-b4c7-4f2d-898e-ffa692dbb63c"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d226c454-4359-4158-baca-24580b4f01c2",
                  "type": "text/javascript",
                  "exec": [
                    "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                    "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "var email = nome + \"@qa.com.br\";\r",
                    "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                    "pm.environment.set(\"email\", email);\r",
                    "pm.environment.set(\"password\", password);"
                  ],
                  "_lastExecutionId": "69189213-ed23-48b1-82e6-2c0e4deafb69"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e3f2496d-6ebb-4771-9803-0f5ad0834a22",
        "name": "Login",
        "item": [
          {
            "id": "ace7bf52-c096-479d-9d38-1705bfc9960c",
            "name": "Login",
            "request": {
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8019b2ca-ad6f-4a97-96ee-3cbcd35d5fee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('authorization'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                    "});"
                  ],
                  "_lastExecutionId": "4fdcea12-0f98-4999-8382-63fc6f522d42"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e8ec0223-88f8-4536-947d-45607fe8d438",
        "name": "Produtos",
        "item": [
          {
            "id": "e7142890-78f7-4155-8149-8e6b918a8597",
            "name": "Listar produtos cadastrados",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3cc902e7-0097-49a5-839d-7ed41a796412",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"produtos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                    "                \"properties\": {\r",
                    "                    \"nome\": { \"type\": \"string\" },\r",
                    "                    \"preco\": { \"type\": \"integer\" },\r",
                    "                    \"descricao\": { \"type\": \"string\" },\r",
                    "                    \"quantidade\": { \"type\": \"integer\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "e4cf25fc-795c-46a0-972c-6fc99aead9ee"
                }
              }
            ]
          },
          {
            "id": "e8dae6a0-e086-4452-9fce-6eba2001778e",
            "name": "Cadastrar produto",
            "request": {
              "url": {
                "path": [
                  "produtos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8474d3f-7291-4c19-911c-f90753c121cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ecc1103-7af0-4881-bd46-ea73cd324d18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69c4cd07-8feb-4f76-9318-d9aa5fcbda82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "3fe1a365-abe7-4751-bc81-a450c41b0aeb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "237448b7-5d03-4d6a-ba25-5eb58f130b59",
        "name": "Carrinhos",
        "item": [
          {
            "id": "3b1a2583-7c54-45a4-97f1-4e2b2a67ca6c",
            "name": "Cadastrar carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8e1acf0b-6e70-4e1e-8a4f-97091a2c4dc8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(201);\r",
                    "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                    "    pm.expect(responseJson).to.have.property('_id'); \r",
                    "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                    "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "fd58411d-ac9b-41c7-ae00-0e0dca413928"
                }
              }
            ]
          },
          {
            "id": "29c4c6af-24cf-4e21-9d4d-f75e25b96f53",
            "name": "Buscar carrinho por ID",
            "request": {
              "url": {
                "path": [
                  "carrinhos"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [
                  {
                    "key": "_id",
                    "value": "{{idCarrinho}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7d7782dd-433b-4f8b-bc15-4292951005ed",
                  "type": "text/javascript",
                  "exec": [
                    "const schema = {\r",
                    "    //Valido o primeiro nível do schema\r",
                    "    \"type\": \"object\",\r",
                    "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                    "    \"properties\": {\r",
                    "        \"quantidade\": { \"type\": \"integer\" },\r",
                    "        \"carrinhos\": {\r",
                    "            //Valido o segundo nível do schema\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": {\r",
                    "                \"type\": \"object\",\r",
                    "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                    "                \"properties\": {                    \r",
                    "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                    "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                    "                    \"idUsuario\": { \"type\": \"string\" },\r",
                    "                    \"_id\": { \"type\": \"string\" },\r",
                    "                    \"produtos\":{\r",
                    "                        //Valido o terceiro nível do schema\r",
                    "                        \"type\": \"array\",\r",
                    "                        \"items\": {\r",
                    "                            \"type\":\"object\",\r",
                    "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                    "                            \"properties\": {\r",
                    "                                \"idProduto\": { \"type\": \"string\" },\r",
                    "                                \"quantidade\": { \"type\": \"integer\" },\r",
                    "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                    "                            }\r",
                    "                        }\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "pm.test(\"Valida o schema e status code\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    //Valida o json schema\r",
                    "    pm.response.to.have.jsonSchema(schema);\r",
                    "});"
                  ],
                  "_lastExecutionId": "0accd741-c538-4f5e-a68c-59d56e1520e8"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "4a052a27-b4cb-46c8-963d-2485600603d2",
            "name": "Excluir carrinho",
            "request": {
              "url": {
                "path": [
                  "carrinhos",
                  "concluir-compra"
                ],
                "host": [
                  "{{url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{authorization}}"
                }
              ],
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b88cb729-d0b9-423c-b437-4ddf1e256890",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                    "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                    "    var responseJson = pm.response.json();\r",
                    "    //Valido o status code e propriedades do response\r",
                    "    pm.expect(pm.response.code).to.eql(200);\r",
                    "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                    "});"
                  ],
                  "_lastExecutionId": "17861d35-85ef-40ed-8c4d-1cb0a277ad41"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "f95ba45d-04d9-4bbb-86e5-b9fc7edaa7ad",
      "name": "serverest-tech-sharing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Conteúdo para o tech sharing de testes de API com Postman.\n\nAPI utilizada:\n\n**O ServeRest é uma API REST que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-06-07T21:59:12.400Z",
      "postman_exported_using": "Postman/9.20.3"
    },
    "id": "074a4de0-8ea4-4448-8538-4cbca77455eb",
    "name": "serverest-tech-sharing",
    "values": [
      {
        "type": "any",
        "value": "Bette@qa.com.br",
        "key": "email"
      },
      {
        "type": "any",
        "value": "yHKNZesqkGwpe2T",
        "key": "password"
      },
      {
        "type": "any",
        "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkJldHRlQHFhLmNvbS5iciIsInBhc3N3b3JkIjoieUhLTlplc3FrR3dwZTJUIiwiaWF0IjoxNjg4OTU0MTU1LCJleHAiOjE2ODg5NTQ3NTV9.M1ogG2YYVeSB9HTxQrrtRlvRuUG2bdaqSmK70caWk_E",
        "key": "authorization"
      },
      {
        "type": "any",
        "value": "https://serverest.dev",
        "key": "url"
      },
      {
        "type": "any",
        "value": "fkyTq0XHsqD4ayLK",
        "key": "idProduto"
      },
      {
        "type": "any",
        "value": "FmatDvLc6GXQBkKu",
        "key": "idCarrinho"
      }
    ]
  },
  "globals": {
    "id": "9cde3859-185d-41ff-8f93-9e4eb370eef8",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 64.28571428571429,
      "responseMin": 41,
      "responseMax": 190,
      "responseSd": 51.343978046433584,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688954154979,
      "completed": 1688954155647
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63cbb9b7-dc32-436f-9a52-3e84d2e77534",
          "httpRequestId": "29e6adff-0392-4d34-9797-b423dcb8514d"
        },
        "item": {
          "id": "7a65ce59-6e21-4bfb-8905-32ad7f570772",
          "name": "Cadastrar usuário",
          "request": {
            "url": {
              "path": [
                "usuarios"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"true\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e29e271-017e-4bb3-9aeb-69f5dcba1e46",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "25703f0a-b4c7-4f2d-898e-ffa692dbb63c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d226c454-4359-4158-baca-24580b4f01c2",
                "type": "text/javascript",
                "exec": [
                  "//Recebo da biblioteca faker: nome e password, e utilizo o nome como base para criar o email\r",
                  "var nome = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "var email = nome + \"@qa.com.br\";\r",
                  "var password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "//Armazeno o email e password no environment para utilizar nos próximos testes\r",
                  "pm.environment.set(\"email\", email);\r",
                  "pm.environment.set(\"password\", password);"
                ],
                "_lastExecutionId": "69189213-ed23-48b1-82e6-2c0e4deafb69"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "usuarios"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1c303cc8-a76b-49e2-85bd-05fa9a29007d",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"Bette@qa.com.br\",\r\n  \"password\": \"yHKNZesqkGwpe2T\",\r\n  \"administrador\": \"true\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "82365cc3-78d7-496e-8eb2-c663b542e7a3",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "84c2b35e-ed32-4b0a-827d-c9a6c4be3fff"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "28ebaf334951e9c66b3dd61676efb50d;o=1"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              83,
              66,
              78,
              74,
              79,
              101,
              117,
              102,
              109,
              110,
              118,
              111,
              102,
              90,
              99,
              68,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 82
        },
        "id": "7a65ce59-6e21-4bfb-8905-32ad7f570772"
      },
      {
        "cursor": {
          "ref": "b94b486d-7e7f-464e-8a32-ca6337ddfb2b",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b1347bb0-925a-4232-85dd-a5fa8652e979"
        },
        "item": {
          "id": "ace7bf52-c096-479d-9d38-1705bfc9960c",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8019b2ca-ad6f-4a97-96ee-3cbcd35d5fee",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso e token de auth\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Login realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('authorization'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"authorization\",responseJson.authorization);\r",
                  "});"
                ],
                "_lastExecutionId": "4fdcea12-0f98-4999-8382-63fc6f522d42"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "login"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "04b35c20-8a01-4423-a96c-e9c139f72c6e",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "68",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"Bette@qa.com.br\",\r\n  \"password\": \"yHKNZesqkGwpe2T\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f2e3a8a3-035a-4c9f-ab9f-8af444c3ccc9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "1c799a91-efe7-4d7a-a727-e8d070ea6d7b"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "e4f967426f3ecc7649b558f05a1560e0"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "281"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              110,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              66,
              101,
              97,
              114,
              101,
              114,
              32,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              108,
              98,
              87,
              70,
              112,
              98,
              67,
              73,
              54,
              73,
              107,
              74,
              108,
              100,
              72,
              82,
              108,
              81,
              72,
              70,
              104,
              76,
              109,
              78,
              118,
              98,
              83,
              53,
              105,
              99,
              105,
              73,
              115,
              73,
              110,
              66,
              104,
              99,
              51,
              78,
              51,
              98,
              51,
              74,
              107,
              73,
              106,
              111,
              105,
              101,
              85,
              104,
              76,
              84,
              108,
              112,
              108,
              99,
              51,
              70,
              114,
              82,
              51,
              100,
              119,
              90,
              84,
              74,
              85,
              73,
              105,
              119,
              105,
              97,
              87,
              70,
              48,
              73,
              106,
              111,
              120,
              78,
              106,
              103,
              52,
              79,
              84,
              85,
              48,
              77,
              84,
              85,
              49,
              76,
              67,
              74,
              108,
              101,
              72,
              65,
              105,
              79,
              106,
              69,
              50,
              79,
              68,
              103,
              53,
              78,
              84,
              81,
              51,
              78,
              84,
              86,
              57,
              46,
              77,
              49,
              111,
              103,
              71,
              50,
              89,
              89,
              86,
              101,
              83,
              66,
              57,
              72,
              84,
              120,
              81,
              114,
              114,
              116,
              82,
              108,
              118,
              82,
              117,
              85,
              71,
              50,
              98,
              100,
              97,
              113,
              83,
              109,
              75,
              55,
              48,
              99,
              97,
              87,
              107,
              95,
              69,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 44,
          "responseSize": 281
        },
        "id": "ace7bf52-c096-479d-9d38-1705bfc9960c",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso e token de auth",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fb9d9295-cd7d-4f19-8175-33a6d79ed1be",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d9ca5535-e2a4-4bb8-b8a6-0482fd4a9e5d"
        },
        "item": {
          "id": "e7142890-78f7-4155-8149-8e6b918a8597",
          "name": "Listar produtos cadastrados",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cc902e7-0097-49a5-839d-7ed41a796412",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"produtos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"produtos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"nome\", \"preco\", \"descricao\", \"quantidade\", \"_id\"],\r",
                  "                \"properties\": {\r",
                  "                    \"nome\": { \"type\": \"string\" },\r",
                  "                    \"preco\": { \"type\": \"integer\" },\r",
                  "                    \"descricao\": { \"type\": \"string\" },\r",
                  "                    \"quantidade\": { \"type\": \"integer\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "e4cf25fc-795c-46a0-972c-6fc99aead9ee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7b397777-f6f2-49fa-ab92-1caf2ff6a63c",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "64558e3b-5394-4c15-8290-52ba8649f757",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "756a54e2-c374-4ec4-9777-044c5717b738"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "ee8f8209fb498b0a34dbe0a561592cf7"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "435"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              76,
              111,
              103,
              105,
              116,
              101,
              99,
              104,
              32,
              77,
              88,
              32,
              86,
              101,
              114,
              116,
              105,
              99,
              97,
              108,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              52,
              55,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              77,
              111,
              117,
              115,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              51,
              56,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              66,
              101,
              101,
              74,
              104,
              53,
              108,
              122,
              51,
              107,
              54,
              107,
              83,
              73,
              122,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              111,
              109,
              101,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              32,
              54,
              48,
              32,
              112,
              111,
              108,
              101,
              103,
              97,
              100,
              97,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              34,
              58,
              32,
              53,
              50,
              52,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              99,
              97,
              111,
              34,
              58,
              32,
              34,
              84,
              86,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              52,
              57,
              57,
              55,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              75,
              54,
              108,
              101,
              72,
              100,
              102,
              116,
              67,
              101,
              79,
              74,
              106,
              56,
              66,
              74,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 46,
          "responseSize": 435
        },
        "id": "e7142890-78f7-4155-8149-8e6b918a8597",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d0bcb05f-d64e-4a0d-bf29-ca4e26483b38",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "157264a2-5018-4600-a8f6-c27a3b39c7ae"
        },
        "item": {
          "id": "e8dae6a0-e086-4452-9fce-6eba2001778e",
          "name": "Cadastrar produto",
          "request": {
            "url": {
              "path": [
                "produtos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomProductName}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f8474d3f-7291-4c19-911c-f90753c121cb",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8ecc1103-7af0-4881-bd46-ea73cd324d18"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "69c4cd07-8feb-4f76-9318-d9aa5fcbda82",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do produto\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idProduto\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "3fe1a365-abe7-4751-bc81-a450c41b0aeb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "produtos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkJldHRlQHFhLmNvbS5iciIsInBhc3N3b3JkIjoieUhLTlplc3FrR3dwZTJUIiwiaWF0IjoxNjg4OTU0MTU1LCJleHAiOjE2ODg5NTQ3NTV9.M1ogG2YYVeSB9HTxQrrtRlvRuUG2bdaqSmK70caWk_E"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6185242b-f857-4228-872f-799b2e381f18",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "115",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"nome\": \"Gorgeous Steel Towels\",\r\n  \"preco\": 780,\r\n  \"descricao\": \"Small Metal Mouse\",\r\n  \"quantidade\": 464\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "5a70a6f1-5f8c-497c-8030-82b13a366b6a",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "3314237b-c566-4ffd-b421-87b284ea5413"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "da47c2b553d1b55b2d0c7f61e9914802"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              102,
              107,
              121,
              84,
              113,
              48,
              88,
              72,
              115,
              113,
              68,
              52,
              97,
              121,
              76,
              75,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 43,
          "responseSize": 82
        },
        "id": "e8dae6a0-e086-4452-9fce-6eba2001778e",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do produto",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3196a138-d3ff-4003-ab4a-e09de0e660ed",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a0399f5e-d4b2-4c2d-8acb-1d7175529ba7"
        },
        "item": {
          "id": "3b1a2583-7c54-45a4-97f1-4e2b2a67ca6c",
          "name": "Cadastrar carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e1acf0b-6e70-4e1e-8a4f-97091a2c4dc8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 201 com mensagem de sucesso e o id do carrinho\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(201);\r",
                  "    pm.expect(responseJson.message).to.eql('Cadastro realizado com sucesso');\r",
                  "    pm.expect(responseJson).to.have.property('_id'); \r",
                  "    //Armazeno o token no environment para utilizar nos próximos testes\r",
                  "    pm.environment.set(\"idCarrinho\",responseJson._id);\r",
                  "});"
                ],
                "_lastExecutionId": "fd58411d-ac9b-41c7-ae00-0e0dca413928"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkJldHRlQHFhLmNvbS5iciIsInBhc3N3b3JkIjoieUhLTlplc3FrR3dwZTJUIiwiaWF0IjoxNjg4OTU0MTU1LCJleHAiOjE2ODg5NTQ3NTV9.M1ogG2YYVeSB9HTxQrrtRlvRuUG2bdaqSmK70caWk_E"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4c13daa9-fab9-4a12-be10-28873a221550",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "103",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"fkyTq0XHsqD4ayLK\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "51f91eb5-c961-4990-ba88-eab776e0cef3",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "24ffd74f-ffc0-43bf-a416-67304b05ac3d"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "bfed2800f5c574feab8c599d59a7992e"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "82"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              67,
              97,
              100,
              97,
              115,
              116,
              114,
              111,
              32,
              114,
              101,
              97,
              108,
              105,
              122,
              97,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              70,
              109,
              97,
              116,
              68,
              118,
              76,
              99,
              54,
              71,
              88,
              81,
              66,
              107,
              75,
              117,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 44,
          "responseSize": 82
        },
        "id": "3b1a2583-7c54-45a4-97f1-4e2b2a67ca6c",
        "assertions": [
          {
            "assertion": "Deve retornar status 201 com mensagem de sucesso e o id do carrinho",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "61a472b1-cc3e-4afb-92b9-aa204cb9cac2",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "17305882-df3a-4699-932c-6307d070975b"
        },
        "item": {
          "id": "29c4c6af-24cf-4e21-9d4d-f75e25b96f53",
          "name": "Buscar carrinho por ID",
          "request": {
            "url": {
              "path": [
                "carrinhos"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [
                {
                  "key": "_id",
                  "value": "{{idCarrinho}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7d7782dd-433b-4f8b-bc15-4292951005ed",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "    //Valido o primeiro nível do schema\r",
                  "    \"type\": \"object\",\r",
                  "    \"required\" : [\"quantidade\", \"carrinhos\"],\r",
                  "    \"properties\": {\r",
                  "        \"quantidade\": { \"type\": \"integer\" },\r",
                  "        \"carrinhos\": {\r",
                  "            //Valido o segundo nível do schema\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": {\r",
                  "                \"type\": \"object\",\r",
                  "                \"required\" : [\"produtos\", \"precoTotal\", \"quantidadeTotal\", \"idUsuario\", \"_id\"],\r",
                  "                \"properties\": {                    \r",
                  "                    \"precoTotal\": { \"type\": \"integer\" },\r",
                  "                    \"quantidadeTotal\": { \"type\": \"integer\" },\r",
                  "                    \"idUsuario\": { \"type\": \"string\" },\r",
                  "                    \"_id\": { \"type\": \"string\" },\r",
                  "                    \"produtos\":{\r",
                  "                        //Valido o terceiro nível do schema\r",
                  "                        \"type\": \"array\",\r",
                  "                        \"items\": {\r",
                  "                            \"type\":\"object\",\r",
                  "                            \"required\" : [\"idProduto\", \"quantidade\", \"precoUnitario\"],\r",
                  "                            \"properties\": {\r",
                  "                                \"idProduto\": { \"type\": \"string\" },\r",
                  "                                \"quantidade\": { \"type\": \"integer\" },\r",
                  "                                \"precoUnitario\": { \"type\": \"integer\" }\r",
                  "                            }\r",
                  "                        }\r",
                  "                    }\r",
                  "                }\r",
                  "            }\r",
                  "        }\r",
                  "    }\r",
                  "}\r",
                  "\r",
                  "pm.test(\"Valida o schema e status code\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    //Valida o json schema\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});"
                ],
                "_lastExecutionId": "0accd741-c538-4f5e-a68c-59d56e1520e8"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [
              {
                "key": "_id",
                "value": "FmatDvLc6GXQBkKu"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkJldHRlQHFhLmNvbS5iciIsInBhc3N3b3JkIjoieUhLTlplc3FrR3dwZTJUIiwiaWF0IjoxNjg4OTU0MTU1LCJleHAiOjE2ODg5NTQ3NTV9.M1ogG2YYVeSB9HTxQrrtRlvRuUG2bdaqSmK70caWk_E"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d0f9b1f1-505d-40a1-8966-41beed8ce1f3",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "84678477-e073-4606-a29d-659b81d9f3b3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "f9277bea-1a31-4965-b7e3-555e4073e638"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "f2bb9c7e273f1736d9543829f24e66c9"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "425"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              114,
              114,
              105,
              110,
              104,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              111,
              100,
              117,
              116,
              111,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              80,
              114,
              111,
              100,
              117,
              116,
              111,
              34,
              58,
              32,
              34,
              102,
              107,
              121,
              84,
              113,
              48,
              88,
              72,
              115,
              113,
              68,
              52,
              97,
              121,
              76,
              75,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              85,
              110,
              105,
              116,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              55,
              56,
              48,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              101,
              99,
              111,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              55,
              56,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              100,
              97,
              100,
              101,
              84,
              111,
              116,
              97,
              108,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              85,
              115,
              117,
              97,
              114,
              105,
              111,
              34,
              58,
              32,
              34,
              83,
              66,
              78,
              74,
              79,
              101,
              117,
              102,
              109,
              110,
              118,
              111,
              102,
              90,
              99,
              68,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              70,
              109,
              97,
              116,
              68,
              118,
              76,
              99,
              54,
              71,
              88,
              81,
              66,
              107,
              75,
              117,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 41,
          "responseSize": 425
        },
        "id": "29c4c6af-24cf-4e21-9d4d-f75e25b96f53",
        "assertions": [
          {
            "assertion": "Valida o schema e status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "71c2c8cd-1091-445b-b6b3-69c64403c0dc",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2fec5fa8-95ff-46e6-9b95-f3a6d3881280"
        },
        "item": {
          "id": "4a052a27-b4cb-46c8-963d-2485600603d2",
          "name": "Excluir carrinho",
          "request": {
            "url": {
              "path": [
                "carrinhos",
                "concluir-compra"
              ],
              "host": [
                "{{url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{authorization}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b88cb729-d0b9-423c-b437-4ddf1e256890",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Deve retornar status 200 com mensagem de sucesso\", () => {\r",
                  "    //Armazeno o response json em um var para manipular os dados nos testes\r",
                  "    var responseJson = pm.response.json();\r",
                  "    //Valido o status code e propriedades do response\r",
                  "    pm.expect(pm.response.code).to.eql(200);\r",
                  "    pm.expect(responseJson.message).to.eql('Registro excluído com sucesso');\r",
                  "});"
                ],
                "_lastExecutionId": "17861d35-85ef-40ed-8c4d-1cb0a277ad41"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "carrinhos",
              "concluir-compra"
            ],
            "host": [
              "serverest",
              "dev"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkJldHRlQHFhLmNvbS5iciIsInBhc3N3b3JkIjoieUhLTlplc3FrR3dwZTJUIiwiaWF0IjoxNjg4OTU0MTU1LCJleHAiOjE2ODg5NTQ3NTV9.M1ogG2YYVeSB9HTxQrrtRlvRuUG2bdaqSmK70caWk_E"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "94217993-d326-4801-b2d5-b22d619bf301",
              "system": true
            },
            {
              "key": "Host",
              "value": "serverest.dev",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "22a9bec7-dc59-4460-bf7f-18b5f9dc57f3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-dns-prefetch-control",
              "value": "off"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "x-moesif-transaction-id",
              "value": "f5242d82-dbf3-47bd-8f9b-c2bb9ec7af76"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "X-Cloud-Trace-Context",
              "value": "5afe69716cd762ff7179f671e5eeb7a1"
            },
            {
              "key": "Date",
              "value": "Mon, 10 Jul 2023 01:55:55 GMT"
            },
            {
              "key": "Server",
              "value": "Google Frontend"
            },
            {
              "key": "Content-Length",
              "value": "51"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              82,
              101,
              103,
              105,
              115,
              116,
              114,
              111,
              32,
              101,
              120,
              99,
              108,
              117,
              195,
              173,
              100,
              111,
              32,
              99,
              111,
              109,
              32,
              115,
              117,
              99,
              101,
              115,
              115,
              111,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 42,
          "responseSize": 51
        },
        "id": "4a052a27-b4cb-46c8-963d-2485600603d2",
        "assertions": [
          {
            "assertion": "Deve retornar status 200 com mensagem de sucesso",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1438
    },
    "failures": [],
    "error": null
  }
}